{"version":3,"file":"chunks/5151.3cd35b91.js","mappings":"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K,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,GAAI,GAAI,KAAM,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,EAAG,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,KAAM,EAAG,MACvgEC,GAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG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","sources":["webpack:///../../node_modules/@babel/parser/lib/index.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack:///../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///../../node_modules/@next-core/cook/dist/esm/ExecutionContext.js","webpack:///../../node_modules/@next-core/cook/dist/esm/traverse.js","webpack:///../../node_modules/@next-core/cook/dist/esm/context-free.js","webpack:///../../node_modules/@next-core/cook/dist/esm/sanitize.js","webpack:///../../node_modules/@next-core/cook/dist/esm/cook.js","webpack:///../../node_modules/@next-core/cook/dist/esm/AnalysisContext.js","webpack:///../../node_modules/@next-core/cook/dist/esm/precook.js","webpack:///../../node_modules/@next-core/cook/dist/esm/hasOwnProperty.js","webpack:///../../node_modules/@next-core/cook/dist/esm/precookFunction.js","webpack:///../../node_modules/@next-core/cook/dist/esm/parse.js","webpack:///../../node_modules/@next-core/cook/dist/esm/preevaluate.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\nvar ParseErrorCode = {\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n};\nconst reflect = (keys, last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce((item, key, i) => i === last ? item[key] = value : item[key], this);\n  }\n});\nconst instantiate = (constructor, properties, descriptors) => Object.keys(descriptors).map(key => [key, descriptors[key]]).filter(([, descriptor]) => !!descriptor).map(([key, descriptor]) => [key, typeof descriptor === \"function\" ? {\n  value: descriptor,\n  enumerable: false\n} : typeof descriptor.reflect === \"string\" ? Object.assign({}, descriptor, reflect(descriptor.reflect.split(\".\"))) : descriptor]).reduce((instance, [key, descriptor]) => Object.defineProperty(instance, key, Object.assign({\n  configurable: true\n}, descriptor)), Object.assign(new constructor(), properties));\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  }\n};\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport: \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\nconst _excluded$1 = [\"toMessage\"],\n  _excluded2$1 = [\"message\"];\nfunction toParseErrorConstructor(_ref) {\n  let {\n      toMessage\n    } = _ref,\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return function constructor({\n    loc,\n    details\n  }) {\n    return instantiate(SyntaxError, Object.assign({}, properties, {\n      loc\n    }), {\n      clone(overrides = {}) {\n        const loc = overrides.loc || {};\n        return constructor({\n          loc: new Position(\"line\" in loc ? loc.line : this.loc.line, \"column\" in loc ? loc.column : this.loc.column, \"index\" in loc ? loc.index : this.loc.index),\n          details: Object.assign({}, this.details, overrides.details)\n        });\n      },\n      details: {\n        value: details,\n        enumerable: false\n      },\n      message: {\n        get() {\n          return `${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`;\n        },\n        set(value) {\n          Object.defineProperty(this, \"message\", {\n            value\n          });\n        }\n      },\n      pos: {\n        reflect: \"loc.index\",\n        enumerable: true\n      },\n      missingPlugin: \"missingPlugin\" in details && {\n        reflect: \"details.missingPlugin\",\n        enumerable: true\n      }\n    });\n  };\n}\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n  const ParseErrorConstructors = {};\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n    const _ref2 = typeof template === \"string\" ? {\n        message: () => template\n      } : typeof template === \"function\" ? {\n        message: template\n      } : template,\n      {\n        message\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\nconst {\n  defineProperty\n} = Object;\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\nvar estree = superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n    return file;\n  }\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n  parseBigIntLiteral(value) {\n    let bigInt;\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n    classBody.body.push(method);\n  }\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n      node.shorthand = false;\n    }\n    return node;\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n    return node;\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n    return super.isAssignable(node, isBinding);\n  }\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, {\n        at: prop.key\n      });\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n      delete node.arguments;\n      delete node.callee;\n    }\n    return node;\n  }\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n    super.toReferencedArguments(node);\n  }\n  parseExport(unfinished, decorators) {\n    const exportStartLoc = this.state.lastTokStartLoc;\n    const node = super.parseExport(unfinished, decorators);\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n      case \"ExportDefaultDeclaration\":\n        {\n          var _declaration$decorato;\n          const {\n            declaration\n          } = node;\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\n            this.resetStartLocation(node, exportStartLoc);\n          }\n        }\n        break;\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n    return node;\n  }\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n    return super.hasPropertyAsPrivateName(node);\n  }\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n  resetStartLocation(node, startLoc) {\n    super.resetStartLocation(node, startLoc);\n    toESTreeLocation(node);\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n};\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n}\nconst keywords$1 = new Map();\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _using: createKeywordLike(\"using\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _satisfies: createKeywordLike(\"satisfies\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 130;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 130;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 134;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 127 && token <= 129;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 119 && token <= 121;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 122 && token <= 128;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n  tokenTypes[140].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\nconst SCOPE_OTHER = 0b000000000,\n  SCOPE_PROGRAM = 0b000000001,\n  SCOPE_FUNCTION = 0b000000010,\n  SCOPE_ARROW = 0b000000100,\n  SCOPE_SIMPLE_CATCH = 0b000001000,\n  SCOPE_SUPER = 0b000010000,\n  SCOPE_DIRECT_SUPER = 0b000100000,\n  SCOPE_CLASS = 0b001000000,\n  SCOPE_STATIC_BLOCK = 0b010000000,\n  SCOPE_TS_MODULE = 0b100000000,\n  SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b0000000000001,\n  BIND_KIND_TYPE = 0b0000000000010,\n  BIND_SCOPE_VAR = 0b0000000000100,\n  BIND_SCOPE_LEXICAL = 0b0000000001000,\n  BIND_SCOPE_FUNCTION = 0b0000000010000,\n  BIND_FLAGS_NONE = 0b00000001000000,\n  BIND_FLAGS_CLASS = 0b00000010000000,\n  BIND_FLAGS_TS_ENUM = 0b00000100000000,\n  BIND_FLAGS_TS_CONST_ENUM = 0b00001000000000,\n  BIND_FLAGS_TS_EXPORT_ONLY = 0b00010000000000,\n  BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000000000,\n  BIND_FLAGS_TS_IMPORT = 0b01000000000000,\n  BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_CATCH_PARAM = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n  BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n  BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n  BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n  BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n  BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n  BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_TS_TYPE_IMPORT = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_TS_IMPORT,\n  BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n  CLASS_ELEMENT_KIND_GETTER = 0b010,\n  CLASS_ELEMENT_KIND_SETTER = 0b001,\n  CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n  CLASS_ELEMENT_OTHER = 0;\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n  get inTopLevel() {\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) || !this.parser.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n}\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n    return false;\n  }\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n}\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n    const {\n      start: nodeStart\n    } = node;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        break;\n      }\n    }\n  }\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/g;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n    default:\n      return false;\n  }\n}\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.inDisallowConditionalTypesContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 137;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n      state[key] = val;\n    }\n    return state;\n  }\n}\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n  return ch === (type === \"double\" ? 34 : 39);\n}\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n    case 114:\n      return res(\"\\r\");\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n    case 116:\n      return res(\"\\t\");\n    case 98:\n      return res(\"\\b\");\n    case 118:\n      return res(\"\\u000b\");\n    case 102:\n      return res(\"\\f\");\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n    case 10:\n      lineStart = pos;\n      ++curLine;\n    case 8232:\n    case 8233:\n      return res(\"\");\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n        return res(String.fromCharCode(octal));\n      }\n      return res(String.fromCharCode(ch));\n  }\n}\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return {\n    code: n,\n    pos\n  };\n}\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n      ++pos;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n  return {\n    code,\n    pos\n  };\n}\nconst _excluded = [\"at\"],\n  _excluded2 = [\"at\"];\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, {\n          at: buildPosition(pos, lineStart, curLine),\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, {\n          at: buildPosition(pos - 1, lineStart, curLine)\n        });\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n  next() {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n  nextTokenInLineStart() {\n    return this.nextTokenInLineStartSince(this.state.pos);\n  }\n  nextTokenInLineStartSince(pos) {\n    skipWhiteSpaceInLine.lastIndex = pos;\n    return skipWhiteSpaceInLine.test(this.input) ? skipWhiteSpaceInLine.lastIndex : pos;\n  }\n  lookaheadInLineCharCode() {\n    return this.input.charCodeAt(this.nextTokenInLineStart());\n  }\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\n        at\n      }));\n      this.state.strictErrors.clear();\n    }\n  }\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(137);\n      return;\n    }\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n  skipBlockComment(commentEnd) {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment(\"*/\");\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            default:\n              break loop;\n          }\n          break;\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition()\n      });\n    }\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\n          at: this.state.curPosition()\n        });\n      }\n      this.state.pos += 2;\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n    this.finishOp(type, width);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n      return;\n    }\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === 94) {\n        this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n      this.finishOp(51, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(47, 1);\n  }\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n      this.finishOp(52, size);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(48, 1);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n        return;\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n        return;\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n        return;\n      case 63:\n        this.readToken_question();\n        return;\n      case 96:\n        this.readTemplateToken();\n        return;\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n      case 47:\n        this.readToken_slash();\n        return;\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n      case 94:\n        this.readToken_caret();\n        return;\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n      case 60:\n        this.readToken_lt();\n        return;\n      case 62:\n        this.readToken_gt();\n        return;\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n      case 126:\n        this.finishOp(36, 1);\n        return;\n      case 64:\n        this.readToken_atSign();\n        return;\n      case 35:\n        this.readToken_numberSign();\n        return;\n      case 92:\n        this.readWord();\n        return;\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n        escaped = ch === 92;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, {\n            at: nextPos()\n          });\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, {\n          at: nextPos()\n        });\n      } else {\n        break;\n      }\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n    this.finishToken(135, {\n      pattern: content,\n      flags: mods\n    });\n  }\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, {\n        at: startLoc\n      });\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(133, str);\n      return;\n    }\n    this.finishToken(132, val);\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, {\n        at: this.state.curPosition()\n      });\n    }\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\n        at: startLoc\n      });\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, {\n          at: startLoc\n        });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n    if (isBigInt) {\n      this.finishToken(133, str);\n      return;\n    }\n    if (isDecimal) {\n      this.finishToken(134, str);\n      return;\n    }\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(132, val);\n  }\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(131, str);\n  }\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n  recordStrictModeErrors(toParseError, {\n    at\n  }) {\n    const index = at.index;\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, {\n        at\n      });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition()\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\n              at: escStart\n            });\n          }\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(130, word);\n    }\n  }\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n  raise(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({\n      loc,\n      details\n    });\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n  raiseOverwrite(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError({\n          loc,\n          details\n        });\n      }\n      if (error.loc.index < pos) break;\n    }\n    return this.raise(toParseError, raiseProperties);\n  }\n  updateContext(prevType) {}\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc\n    });\n  }\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName]\n    });\n  }\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames\n      });\n    }\n  }\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine)\n      });\n    };\n  }\n}\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name\n        });\n      }\n    }\n  }\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n  usePrivateName(name, loc) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n}\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n  recordDeclarationError(ParsingErrorClass, {\n    at\n  }) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n  enter(scope) {\n    this.stack.push(scope);\n  }\n  exit() {\n    this.stack.pop();\n  }\n  recordParameterInitializerError(toParseError, {\n    at: node\n  }) {\n    const origin = {\n      at: node.loc.start\n    };\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n  recordArrowParameterBindingError(error, {\n    at: node\n  }) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = {\n      at: node.loc.start\n    };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n  recordAsyncArrowParametersError({\n    at\n  }) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\n          at\n        });\n      }\n      scope = stack[--i];\n    }\n  }\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, {\n        at: loc\n      });\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\nconst PARAM = 0b0000,\n  PARAM_YIELD = 0b0001,\n  PARAM_AWAIT = 0b0010,\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n    return false;\n  }\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, {\n          at: this.state.startLoc\n        });\n      }\n      this.unexpected(null, token);\n    }\n  }\n  canInsertSemicolon() {\n    return this.match(137) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, {\n      at: this.state.lastTokEndLoc\n    });\n  }\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n      throw error;\n    }\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n    if (!andThrow) {\n      return hasErrors;\n    }\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc\n      });\n    }\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, {\n        at: doubleProtoLoc\n      });\n    }\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, {\n        at: privateKeyLoc\n      });\n    }\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n}\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n}\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n    return newNode;\n  };\n}\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n  startNodeAt(loc) {\n    return new Node(this, loc.index, loc);\n  }\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.loc.start);\n  }\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n  finishNodeAt(node, type, endLoc) {\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n  resetStartLocation(node, startLoc) {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 97;\n}\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n  finishToken(type, val) {\n    if (type !== 131 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n    super.finishToken(type, val);\n  }\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n      if (!matches) ;else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n    super.addComment(comment);\n  }\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(108);\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n        at: moduloLoc\n      });\n    }\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n    return [type, predicate];\n  }\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(125)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(128)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(129)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(127)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      this.unexpected();\n    }\n  }\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n    if (this.match(131)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n      if (this.match(83)) {\n        this.next();\n        if (!this.isContextual(128) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(123, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n      body.push(bodyNode);\n    }\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n            at: bodyElement\n          });\n        }\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(128) || this.isContextual(127)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n          at: this.state.startLoc,\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(129)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(127) || this.isContextual(128) || this.isContextual(129)) {\n        node = this.parseExport(node, null);\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n    this.unexpected();\n  }\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(109);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n  flowParseInterfaceish(node, isClass) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n    if (isClass) {\n      node.implements = [];\n      node.mixins = [];\n      if (this.eatContextual(115)) {\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n      if (this.eatContextual(111)) {\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(12));\n      }\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node, false);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n        at: this.state.startLoc\n      });\n    }\n  }\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\n      at: startLoc,\n      reservedType: word\n    });\n  }\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(128);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.supertype = null;\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n    node.impltype = null;\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, {\n          at: nodeStartLoc\n        });\n      }\n    }\n    return this.finishNode(node, \"TypeParameter\");\n  }\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    let defaultRequired = false;\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(127);\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n  flowParseObjectPropertyKey() {\n    return this.match(132) || this.match(131) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n    } else {\n      node.method = false;\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n      node.value = this.flowParseTypeInitialiser();\n    }\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    this.expect(10);\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n    nodeStart.exact = exact;\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n      if (allowProto && this.isContextual(116)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n      if (allowStatic && this.isContextual(104)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n      const variance = this.flowParseVariance();\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n        if (this.isContextual(98) || this.isContextual(103)) {\n          const lookahead = this.lookahead();\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n      this.flowObjectTypeSemicolon();\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n          at: inexactStartLoc\n        });\n      }\n    }\n    this.expect(endDelim);\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, {\n            at: this.state.lastTokStartLoc\n          });\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, {\n            at: variance\n          });\n        }\n        return null;\n      }\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, {\n          at: this.state.lastTokStartLoc\n        });\n      }\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, {\n          at: variance\n        });\n      }\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\n            at: node.value.this\n          });\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n        if (this.eat(17)) {\n          optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\n        at: property.value.this\n      });\n    }\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: property\n      });\n    }\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: property\n      });\n    }\n  }\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\n    var _startLoc;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n    return node;\n  }\n  flowParseGenericType(startLoc, id) {\n    const node = this.startNodeAt(startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node\n        });\n      }\n      name = this.parseIdentifier(isThis);\n      if (this.eat(17)) {\n        optional = true;\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n            at: node\n          });\n        }\n      }\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n  flowIdentToTypeAnnotation(startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startLoc, id);\n    }\n  }\n  flowParsePrimaryType() {\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 10:\n        this.next();\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 131:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n          if (this.match(132)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n          if (this.match(133)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n            at: this.state.startLoc\n          });\n        }\n        this.unexpected();\n        return;\n      case 132:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n      case 133:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n      case 87:\n        return this.flowParseTypeofType();\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(127)) {\n            return this.flowParseInterfaceType();\n          }\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\n        }\n    }\n    this.unexpected();\n  }\n  flowParsePostfixType() {\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n    return type;\n  }\n  flowParsePrefixType() {\n    const node = this.startNode();\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n    return param;\n  }\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 130 && this.state.value === \"_\") {\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n    return ident;\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  flowParseVariance() {\n    let variance = null;\n    if (this.match(53)) {\n      variance = this.startNode();\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n    return variance;\n  }\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n      return;\n    }\n    super.parseFunctionBody(node, false, isMethod);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  parseStatementLike(flags) {\n    if (this.state.strict && this.isContextual(127)) {\n      const lookahead = this.lookahead();\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    const stmt = super.parseStatementLike(flags);\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n    return stmt;\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n    return super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return !this.state.containsEsc;\n    }\n    return super.shouldParseExportDeclaration();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return this.state.containsEsc;\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\n          at: state.startLoc\n        });\n      }\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n    while (stack.length !== 0) {\n      const node = stack.pop();\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n  finishArrowValidation(node) {\n    var _node$extra;\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n    return result;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n    return node;\n  }\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n    super.assertModuleNodeAllowed(node);\n  }\n  parseExport(node, decorators) {\n    const decl = super.parseExport(node, decorators);\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n    return decl;\n  }\n  parseExportDeclaration(node) {\n    if (this.isContextual(128)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(129)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(127)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n    if (this.isContextual(128) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n    return hasNamespace;\n  }\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n    if (this.isContextual(123)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      member.declare = true;\n    }\n    super.parseClassMember(classBody, member, state);\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, {\n          at: startLoc\n        });\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\n          at: member.value\n        });\n      }\n    }\n  }\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, {\n        at: this.state.curPosition(),\n        identifierName: fullWord\n      });\n    }\n    this.finishToken(130, fullWord);\n  }\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 123 && next === 124) {\n      this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        this.finishOp(18, 2);\n      } else {\n        this.finishOp(17, 1);\n      }\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      this.readIterator();\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n    super.toAssignable(node, isLHS);\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n      const expr = exprList[i];\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, {\n          at: expr.typeAnnotation\n        });\n      }\n    }\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n    return node;\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassPrivateProperty(node);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    if (method.params && isConstructor) {\n      const params = method.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    }\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    if (this.isContextual(111)) {\n      this.next();\n      const implemented = node.implements = [];\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length > 0) {\n      const param = params[0];\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\n          at: param\n        });\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\n          at: param\n        });\n      }\n    }\n  }\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n    delete prop.variance;\n    let typeParameters;\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n    return result;\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n          at: param\n        });\n      }\n      param.optional = true;\n    }\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\n        at: param\n      });\n    }\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, {\n        at: param\n      });\n    }\n    this.resetEndLocation(param);\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n    return isMaybeDefaultImport(this.state.type);\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(FlowErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n    if (this.match(87)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(128)) {\n      kind = \"type\";\n    }\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n      if (kind === \"type\" && type === 55) {\n        this.unexpected(null, lh.type);\n      }\n      if (isMaybeDefaultImport(type) || type === 5 || type === 55) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n    let isBinding = false;\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, {\n            at: specifier,\n            importName: firstIdent.value\n          });\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n        at: specifier\n      });\n    }\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseFunctionParams(node, isConstructor) {\n    const kind = node.kind;\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n    let state = null;\n    let jsx;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\n              at: typeParameters\n            });\n          }\n          return arrow.node;\n        }\n        arrowExpression = arrow.node;\n      }\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n        at: typeParameters\n      });\n    }\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n    return super.parseArrow(node);\n  }\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node.params[i]\n        });\n      }\n    }\n    super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n      throw arrow.error || result.error;\n    }\n    return super.parseSubscripts(base, startLoc, noCalls);\n  }\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\n  }\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n    node.typeArguments = targs;\n  }\n  parseAsyncArrowWithTypeParameters(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.parseFunctionParams(node, false);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n    super.readToken_mult_modulo(code);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n    super.readToken_pipe_amp(code);\n  }\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, {\n        at: this.state.curPosition()\n      });\n    }\n    return fileNode;\n  }\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, {\n          at: this.state.startLoc\n        });\n      }\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n      return;\n    }\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n  }\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n    return false;\n  }\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n  }\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n      at: loc,\n      memberName,\n      enumName\n    });\n  }\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\n      at: loc\n    }, enumContext));\n  }\n  flowEnumErrorNumberMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n      at: loc,\n      enumName,\n      memberName\n    });\n  }\n  flowEnumErrorStringMemberInconsistentlyInitailized(node, {\n    enumName\n  }) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n      at: node,\n      enumName\n    });\n  }\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n    const endOfInit = () => this.match(12) || this.match(8);\n    switch (this.state.type) {\n      case 132:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 131:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n    if (explicitType === null) {\n      return;\n    }\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n      if (memberName === \"\") {\n        continue;\n      }\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, {\n          at: id,\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\n          at: id,\n          memberName,\n          enumName\n        });\n      }\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return initializedMembers;\n    }\n  }\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(101)) return null;\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n        at: this.state.startLoc,\n        enumName\n      });\n    }\n    const {\n      value\n    } = this.state;\n    this.next();\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\n        at: this.state.startLoc,\n        enumName,\n        invalidEnumType: value\n      });\n    }\n    return value;\n  }\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n    return false;\n  }\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n};\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\nvar jsx = superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              this.finishToken(140);\n            } else {\n              super.getTokenFromCode(ch);\n            }\n            return;\n          }\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(139, out);\n          return;\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n        case 62:\n        case 125:\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n      }\n    }\n  }\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(131, out);\n  }\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n    this.finishToken(138, this.input.slice(start, this.state.pos));\n  }\n  jsxParseIdentifier() {\n    const node = this.startNode();\n    if (this.match(138)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n  jsxParseNamespacedName() {\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n  jsxParseElementName() {\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n    return node;\n  }\n  jsxParseAttributeValue() {\n    let node;\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, {\n            at: node\n          });\n        }\n        return node;\n      case 140:\n      case 131:\n        return this.parseExprAtom();\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\n          at: this.state.startLoc\n        });\n    }\n  }\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n  jsxParseAttribute() {\n    const node = this.startNode();\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n  jsxParseOpeningElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n    while (!this.match(56) && !this.match(141)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(141);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n  jsxParseClosingElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    this.expect(141);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n  jsxParseElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\n    let closingElement = null;\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 140:\n            startLoc = this.state.startLoc;\n            this.next();\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startLoc);\n              break contents;\n            }\n            children.push(this.jsxParseElementAt(startLoc));\n            break;\n          case 139:\n            children.push(this.parseExprAtom());\n            break;\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, {\n          at: closingElement\n        });\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, {\n          at: closingElement,\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n    node.children = children;\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n        at: this.state.startLoc\n      });\n    }\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n  jsxParseElement() {\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startLoc);\n  }\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(139)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(140)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(140);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n  getTokenFromCode(code) {\n    const context = this.curContext();\n    if (context === types.j_expr) {\n      this.jsxReadToken();\n      return;\n    }\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        this.jsxReadWord();\n        return;\n      }\n      if (code === 62) {\n        ++this.state.pos;\n        this.finishToken(141);\n        return;\n      }\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        this.jsxReadString(code);\n        return;\n      }\n    }\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      this.finishToken(140);\n      return;\n    }\n    super.getTokenFromCode(code);\n  }\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n    if (type === 56 && prevType === 140) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 140) {\n      context.push(types.j_oTag);\n    } else if (type === 141) {\n      const out = context[context.length - 1];\n      if (out === types.j_oTag && prevType === 56 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n};\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n}\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n  enter(flags) {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n    super.enter(flags);\n  }\n  exit() {\n    const flags = super.exit();\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n    return flags;\n  }\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n  declareName(name, bindingType, loc) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n    super.checkLocalExport(id);\n  }\n}\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, {\n          at: node\n        });\n      }\n    }\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc\n            });\n          }\n        }\n        break;\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break;\n        }\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, {\n            at: node.left.loc.end\n          });\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, {\n          at: prop\n        });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, {\n            at: elt\n          });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, {\n            at: trailingCommaLoc\n          });\n        }\n      }\n    }\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n      default:\n        return false;\n    }\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, 1);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n    return this.parseIdentifier();\n  }\n  parseBindingList(close, closeCharCode, flags) {\n    const allowEmpty = flags & 1;\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(), flags));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc\n          });\n        }\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      startLoc\n    } = this.state;\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 136) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\n  }\n  parseAssignableListItem(flags, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  parseAssignableListItemTypes(param, flags) {\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    var _startLoc, _left;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n  checkLVal(expression, {\n    in: ancestor,\n    binding = BIND_NONE,\n    checkClashes = false,\n    strictModeChanged = false,\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, {\n          at: expression\n        });\n      }\n      return;\n    }\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n      const {\n        name\n      } = expression;\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, {\n            at: expression\n          });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n      return;\n    }\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass = binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor\n      });\n      return;\n    }\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" || type === \"ParenthesizedExpression\" ? {\n      type\n    } : ancestor;\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, {\n          at,\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name\n        });\n      }\n    }\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, {\n        at\n      });\n    }\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, {\n          at: node\n        });\n    }\n  }\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\n      at: this.state.startLoc\n    });\n    return true;\n  }\n}\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TupleOptionalAfterType: \"A labeled tuple optional element must be declared using a question mark after the name and before the colon (`name?: type`), rather than after the type (`name: type?`).\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\nvar typescript = superClass => class TypeScriptParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"const\", \"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n    this.tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n    this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(136) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58 && this.state.type !== 75) {\n      return undefined;\n    }\n    const modifier = this.state.value;\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n    return undefined;\n  }\n  tsParseModifiers({\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }, modified) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, {\n          at: loc,\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, {\n          at: loc,\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        }\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n        modified[modifier] = true;\n      }\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, {\n          at: startLoc,\n          modifier\n        });\n      }\n    }\n  }\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n      case \"HeritageClauseElement\":\n        return this.match(5);\n      case \"TupleElementTypes\":\n        return this.match(3);\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n  }\n  tsParseList(kind, parseElement) {\n    const result = [];\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n    return result;\n  }\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      trailingCommaPos = -1;\n      const element = parseElement();\n      if (element == null) {\n        return undefined;\n      }\n      result.push(element);\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      if (expectSuccess) {\n        this.expect(12);\n      }\n      return undefined;\n    }\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n    return result;\n  }\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n    return result;\n  }\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n    if (!this.match(131)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\n        at: this.state.startLoc\n      });\n    }\n    node.argument = super.parseExprAtom();\n    this.expect(11);\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSImportType\");\n  }\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n    return entity;\n  }\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n  tsParseTypeParameter(parseModifiers) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, {\n        at: node\n      });\n    }\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n  tsParseBindingListForSignature() {\n    const list = super.parseBindingList(11, 41, 2);\n    for (const pattern of list) {\n      const {\n        type\n      } = pattern;\n      if (type === \"AssignmentPattern\" || type === \"TSParameterProperty\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n          at: pattern,\n          type\n        });\n      }\n    }\n    return list;\n  }\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n    return false;\n  }\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return;\n    }\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\n          at: node\n        });\n      }\n      const method = nodeAny;\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n          at: this.state.curPosition()\n        });\n      }\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, {\n            at: this.state.curPosition()\n          });\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, {\n            at: this.state.curPosition()\n          });\n        } else {\n          const firstParameter = method[paramsKey][0];\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n            at: method[returnTypeKey]\n          });\n        }\n      } else {\n        method.kind = \"method\";\n      }\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n  tsParseTypeMember() {\n    const node = this.startNode();\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n    this.tsParseModifiers({\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    }, node);\n    const idx = this.tsTryParseIndexSignature(node);\n    if (idx) {\n      return idx;\n    }\n    super.parsePropertyName(node);\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n  tsIsStartOfMappedType() {\n    this.next();\n    if (this.eat(53)) {\n      return this.isContextual(120);\n    }\n    if (this.isContextual(120)) {\n      this.next();\n    }\n    if (!this.match(0)) {\n      return false;\n    }\n    this.next();\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n    this.next();\n    return this.match(58);\n  }\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(120);\n    } else if (this.eatContextual(120)) {\n      node.readonly = true;\n    }\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n      const {\n        type\n      } = elementNode;\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\n          at: elementNode\n        });\n      }\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n      let checkType = type;\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        checkType = elementNode.type;\n      }\n      const isLabeled = checkType === \"TSNamedTupleMember\";\n      (_labeledElements = labeledElements) != null ? _labeledElements : labeledElements = isLabeled;\n      if (labeledElements !== isLabeled) {\n        this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n          at: elementNode\n        });\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n  tsParseTupleElementType() {\n    const {\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let labeled;\n    let label;\n    let optional;\n    let type;\n    const isWord = tokenIsKeywordOrIdentifier(this.state.type);\n    const chAfterWord = isWord ? this.lookaheadCharCode() : null;\n    if (chAfterWord === 58) {\n      labeled = true;\n      optional = false;\n      label = this.parseIdentifier(true);\n      this.expect(14);\n      type = this.tsParseType();\n    } else if (chAfterWord === 63) {\n      optional = true;\n      const startLoc = this.state.startLoc;\n      const wordName = this.state.value;\n      const typeOrLabel = this.tsParseNonArrayType();\n      if (this.lookaheadCharCode() === 58) {\n        labeled = true;\n        label = this.createIdentifier(this.startNodeAt(startLoc), wordName);\n        this.expect(17);\n        this.expect(14);\n        type = this.tsParseType();\n      } else {\n        labeled = false;\n        type = typeOrLabel;\n        this.expect(17);\n      }\n    } else {\n      type = this.tsParseType();\n      optional = this.eat(17);\n      labeled = this.eat(14);\n    }\n    if (labeled) {\n      let labeledNode;\n      if (label) {\n        labeledNode = this.startNodeAtNode(label);\n        labeledNode.optional = optional;\n        labeledNode.label = label;\n        labeledNode.elementType = type;\n        if (this.eat(17)) {\n          labeledNode.optional = true;\n          this.raise(TSErrors.TupleOptionalAfterType, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n      } else {\n        labeledNode = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\n          at: type\n        });\n        labeledNode.label = type;\n        labeledNode.elementType = this.tsParseType();\n      }\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n    if (rest) {\n      const restNode = this.startNodeAt(startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n    return type;\n  }\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n    switch (this.state.type) {\n      case 132:\n      case 133:\n      case 131:\n      case 85:\n      case 86:\n        node.literal = super.parseExprAtom();\n        break;\n      default:\n        this.unexpected();\n    }\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 131:\n      case 132:\n      case 133:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n          if (nextToken.type !== 132 && nextToken.type !== 133) {\n            this.unexpected();\n          }\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n        break;\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n      case 87:\n        return this.tsParseTypeQuery();\n      case 83:\n        return this.tsParseImportType();\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n      case 0:\n        return this.tsParseTupleType();\n      case 10:\n        return this.tsParseParenthesizedType();\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n      default:\n        {\n          const {\n            type\n          } = this.state;\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n    this.unexpected();\n  }\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n    return type;\n  }\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, {\n          at: node\n        });\n    }\n  }\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(113);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(113) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        super.parseBindingList(3, 93, 1);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n    return false;\n  }\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n      if (this.match(11)) {\n        this.next();\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    if (this.match(14)) {\n      return this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n  }\n  tsTryParseTypeAnnotation() {\n    if (this.match(14)) {\n      return this.tsParseTypeAnnotation();\n    }\n  }\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 107) {\n      return false;\n    }\n    const containsEsc = this.state.containsEsc;\n    this.next();\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.lastTokStartLoc,\n        reservedWord: \"asserts\"\n      });\n    }\n    return true;\n  }\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n  isAbstractConstructorSignature() {\n    return this.isContextual(122) && this.lookahead().type === 77;\n  }\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n    return this.tsParseUnionTypeOrHigher();\n  }\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, {\n        at: this.state.startLoc\n      });\n    }\n    const node = this.startNode();\n    node.typeAnnotation = this.tsInType(() => {\n      this.next();\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\n    });\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, {\n        at: originalStartLoc,\n        token\n      });\n    }\n    return delimitedList;\n  }\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(127);\n    if (properties.declare) node.declare = true;\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, {\n        at: this.state.startLoc\n      });\n    }\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_TS_TYPE);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers);\n      this.expect(29);\n      if (this.isContextual(112) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsEatThenParseType(token) {\n    if (this.match(token)) {\n      return this.tsNextThenParseType();\n    }\n  }\n  tsExpectThenParseType(token) {\n    return this.tsInType(() => {\n      this.expect(token);\n      return this.tsParseType();\n    });\n  }\n  tsNextThenParseType() {\n    return this.tsInType(() => {\n      this.next();\n      return this.tsParseType();\n    });\n  }\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(131) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(124);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n    if (!nested) {\n      this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n    }\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(110)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(131)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, {\n        at: moduleReference\n      });\n    }\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n  tsIsExternalModuleReference() {\n    return this.isContextual(117) && this.lookaheadCharCode() === 40;\n  }\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(117);\n    this.expect(10);\n    if (!this.match(131)) {\n      this.unexpected();\n    }\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n    if (result !== undefined && result !== false) {\n      return result;\n    }\n    this.state = state;\n  }\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n    let startType = this.state.type;\n    let kind;\n    if (this.isContextual(99)) {\n      startType = 74;\n      kind = \"let\";\n    }\n    return this.tsInAmbientContext(() => {\n      switch (startType) {\n        case 68:\n          nany.declare = true;\n          return super.parseFunctionStatement(nany, false, false);\n        case 80:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n        case 124:\n          return this.tsParseEnumDeclaration(nany, {\n            declare: true\n          });\n        case 110:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n        case 75:\n        case 74:\n          if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n            nany.declare = true;\n            return this.parseVarStatement(nany, kind || this.state.value, true);\n          }\n          this.expect(75);\n          return this.tsParseEnumDeclaration(nany, {\n            const: true,\n            declare: true\n          });\n        case 127:\n          {\n            const result = this.tsParseInterfaceDeclaration(nany, {\n              declare: true\n            });\n            if (result) return result;\n          }\n        default:\n          if (tokenIsIdentifier(startType)) {\n            return this.tsParseDeclaration(nany, this.state.value, true, null);\n          }\n      }\n    });\n  }\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\n  }\n  tsParseExpressionStatement(node, expr, decorators) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n          }\n          return declaration;\n        }\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n        break;\n      default:\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\n    }\n  }\n  tsParseDeclaration(node, value, next, decorators) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node, decorators);\n        }\n        break;\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(131)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n        break;\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n        break;\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n        break;\n    }\n  }\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n    return !this.isLineTerminator();\n  }\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\n    if (!this.match(47)) return;\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startLoc);\n      node.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    if (!res) return;\n    return super.parseArrowExpression(res, null, true);\n  }\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) return;\n    return this.tsParseTypeArguments();\n  }\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, {\n        at: node\n      });\n    } else if (!this.state.inType && this.curContext() === types.brace) {\n      this.reScan_lt_gt();\n    }\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n  parseAssignableListItem(flags, decorators) {\n    const startLoc = this.state.startLoc;\n    const modified = {};\n    this.tsParseModifiers({\n      allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n    }, modified);\n    const accessibility = modified.accessibility;\n    const override = modified.override;\n    const readonly = modified.readonly;\n    if (!(flags & 4) && (accessibility || readonly || override)) {\n      this.raise(TSErrors.UnexpectedParameterModifier, {\n        at: startLoc\n      });\n    }\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startLoc);\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\n          at: pp\n        });\n      }\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n  tsDisallowOptionalPattern(node) {\n    for (const param of node.params) {\n      if (param.type !== \"Identifier\" && param.optional && !this.state.isAmbientContext) {\n        this.raise(TSErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n    }\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    this.tsDisallowOptionalPattern(node);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\n        at: node\n      });\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n    this.tsDisallowOptionalPattern(node);\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\n          at: node.typeAnnotation\n        });\n      }\n    });\n  }\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n    let isOptionalCall = false;\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n        const tokenType = this.state.type;\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n        const node = this.startNodeAt(startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\n            at: this.state.startLoc\n          });\n        }\n        return result;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, state);\n  }\n  parseNewCallee(node) {\n    var _callee$extra;\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    let isSatisfies;\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(118)))) {\n      const node = this.startNodeAt(leftStartLoc);\n      node.expression = left;\n      node.typeAnnotation = this.tsInType(() => {\n        this.next();\n        if (this.match(75)) {\n          if (isSatisfies) {\n            this.raise(Errors.UnexpectedKeyword, {\n              at: this.state.startLoc,\n              keyword: \"const\"\n            });\n          }\n          return this.tsParseTypeReference();\n        }\n        return this.tsParseType();\n      });\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartLoc, minPrec);\n    }\n    return super.parseExprOp(left, leftStartLoc, minPrec);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(TSErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  checkDuplicateExports() {}\n  parseImport(node) {\n    node.importKind = \"value\";\n    if (tokenIsIdentifier(this.state.type) || this.match(55) || this.match(5)) {\n      let ahead = this.lookahead();\n      if (this.isContextual(128) && ahead.type !== 12 && ahead.type !== 97 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n    const importNode = super.parseImport(node);\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n        at: importNode\n      });\n    }\n    return importNode;\n  }\n  parseExport(node, decorators) {\n    if (this.match(83)) {\n      this.next();\n      if (this.isContextual(128) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(126);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      node.exportKind = \"value\";\n      if (this.isContextual(128)) {\n        const ch = this.lookaheadCharCode();\n        if (ch === 123 || ch === 42) {\n          this.next();\n          node.exportKind = \"type\";\n        }\n      }\n      return super.parseExport(node, decorators);\n    }\n  }\n  isAbstractClass() {\n    return this.isContextual(122) && this.lookahead().type === 80;\n  }\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n    if (this.match(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n          at: init\n        });\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\n          at: init\n        });\n      }\n    }\n    return declaration;\n  }\n  parseStatementContent(flags, decorators) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n    if (this.isContextual(124)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n    if (this.isContextual(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseStatementContent(flags, decorators);\n  }\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n      return !!member[modifier];\n    });\n  }\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(104) && this.lookaheadCharCode() === 123;\n  }\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    }, member);\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n            at: this.state.curPosition()\n          });\n        }\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n    if (idx) {\n      classBody.body.push(idx);\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\n          at: member\n        });\n      }\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\n          at: member,\n          modifier: member.accessibility\n        });\n      }\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\n          at: member\n        });\n      }\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, {\n          at: member\n        });\n      }\n      return;\n    }\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n        at: member\n      });\n    }\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, {\n          at: member\n        });\n      }\n    }\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, {\n        at: methodOrProp\n      });\n    }\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, {\n        at: methodOrProp\n      });\n    }\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\n    return decl || super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n      return expr;\n    }\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n    return node;\n  }\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(123)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(123);\n    if (isDeclare && (this.isContextual(123) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n        at: this.state.startLoc\n      });\n    }\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startLoc);\n      declaration.declare = true;\n    }\n    return declaration;\n  }\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(111)) {\n      return;\n    }\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional) {\n      if (this.eat(35)) {\n        node.definite = true;\n      } else if (this.eat(17)) {\n        node.optional = true;\n      }\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n        at: this.state.startLoc\n      });\n    }\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\n        at: this.state.startLoc,\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, {\n        at: node\n      });\n    }\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\n        at: node,\n        modifier: node.accessibility\n      });\n    }\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n  parseClassAccessorProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (node.optional) {\n      this.raise(TSErrors.AccessorCannotBeOptional, {\n        at: node\n      });\n    }\n    return super.parseClassAccessorProperty(node);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\n        at: typeParameters\n      });\n    }\n    const {\n      declare = false,\n      kind\n    } = method;\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, {\n        at: method,\n        kind\n      });\n    }\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n    if (this.eatContextual(111)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n  parseFunctionParams(node, isConstructor) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2;\n    let state;\n    let jsx;\n    let typeCast;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n      typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n    throw ((_jsx3 = jsx) == null ? void 0 : _jsx3.error) || arrow.error || ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.error);\n  }\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n    if (node.params.length === 1 && !node.params[0].constraint && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, {\n        at: node\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    }\n    return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n    return super.parseArrow(node);\n  }\n  parseAssignableListItemTypes(param, flags) {\n    if (!(flags & 2)) return param;\n    if (this.eat(17)) {\n      param.optional = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n      case \"TSParameterProperty\":\n        return true;\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        }\n        this.toAssignable(node.expression, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSSatisfiesExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  parseBindingAtom() {\n    if (this.state.type === 78) {\n      return this.parseIdentifier(true);\n    }\n    return super.parseBindingAtom();\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n      this.unexpected(null, 10);\n    }\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    }\n    return super.checkCommaAfterRest(close);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        this.finishOp(48, 1);\n        return;\n      }\n      if (code === 60) {\n        this.finishOp(47, 1);\n        return;\n      }\n    }\n    super.getTokenFromCode(code);\n  }\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n    return type;\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n    return super.shouldParseArrow(params);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n    return param;\n  }\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n  tsParseAbstractDeclaration(node, decorators) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\n    } else if (this.isContextual(127)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n          at: node\n        });\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\n          at: method,\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n    return method;\n  }\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.parse();\n  }\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.getExpression();\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n  }\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\n        at: loc\n      });\n    }\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n    }\n  }\n};\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nfunction isValidAmbientConstInitializer(expression, estree) {\n  var _expression$extra;\n  const {\n    type\n  } = expression;\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const {\n        value\n      } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\nfunction isNumber(expression, estree) {\n  if (estree) {\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\n  }\n  return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\n}\nfunction isNegativeNumber(expression, estree) {\n  if (expression.type === \"UnaryExpression\") {\n    const {\n      operator,\n      argument\n    } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\" || expression.computed) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(142)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(142);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      this.finishOp(142, 2);\n    } else {\n      super.getTokenFromCode(code);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (super.chStartsBindingIdentifier(ch, pos)) {\n      return true;\n    }\n    const nextToken = this.lookahead();\n    if (nextToken.type === 142) {\n      return true;\n    }\n    return false;\n  }\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (placeholder) {\n      if (this.match(81) || this.match(142) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n          at: this.state.startLoc\n        });\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n  parseExport(node, decorators) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node, decorators);\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node, decorators);\n  }\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(142), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n    return super.maybeParseExportDefaultSpecifier(node);\n  }\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n    this.expectContextual(97);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n  }\n};\nvar v8intrinsic = superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName();\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n};\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean, if specified.\");\n    }\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowNewTargetOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true,\n  annexB: true\n};\nfunction getOptions(opts) {\n  if (opts && opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n  const options = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, {\n          at: key\n        });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, {\n            at: key\n          });\n        }\n      }\n      protoRef.used = true;\n    }\n  }\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(137)) {\n      this.unexpected();\n    }\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n  parseExpressionBase(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(12)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(106)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const {\n      type\n    } = this.state;\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n        const startIndex = startLoc.index;\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(136) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n  parseExprOps(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value\n        });\n      }\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n        this.next();\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc\n            });\n          }\n        }\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n  parseExprOpRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(106)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n  parseExprOpBaseRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n  parseHackPipeBody() {\n    var _body$extra;\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, {\n        at: startLoc\n      });\n    }\n    return body;\n  }\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(34);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, {\n            at: node\n          });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, {\n            at: node\n          });\n        }\n      }\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\n          at: startLoc\n        });\n        return this.parseAwait(startLoc);\n      }\n    }\n    return expr;\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseSubscripts(expr, startLoc);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n    let optional = false;\n    if (type === 18) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc\n        });\n        if (this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n  parseMember(base, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(136)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, {\n          at: startLoc\n        });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n  parseBind(base, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\n  }\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n  parseTaggedTemplateExpression(base, startLoc, state) {\n    const node = this.startNodeAt(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, {\n        at: startLoc\n      });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount: this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, {\n              at: arg\n            });\n          }\n        }\n      }\n    }\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n  parseNoCallExpr() {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    let decorators = null;\n    const {\n      type\n    } = this.state;\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n      case 83:\n        node = this.startNode();\n        this.next();\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n        if (!this.match(10)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n      case 132:\n        return this.parseNumericLiteral(this.state.value);\n      case 133:\n        return this.parseBigIntLiteral(this.state.value);\n      case 134:\n        return this.parseDecimalLiteral(this.state.value);\n      case 131:\n        return this.parseStringLiteral(this.state.value);\n      case 84:\n        return this.parseNullLiteral();\n      case 85:\n        return this.parseBooleanLiteral(true);\n      case 86:\n        return this.parseBooleanLiteral(false);\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n      case 26:\n        decorators = this.parseDecorators();\n      case 80:\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\n      case 77:\n        return this.parseNewOrNewTarget();\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, {\n              at: callee\n            });\n          }\n        }\n      case 136:\n        {\n          this.raise(Errors.PrivateInExpectedIn, {\n            at: this.state.startLoc,\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          }\n          this.unexpected();\n          break;\n        }\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          } else {\n            this.unexpected();\n          }\n          break;\n        }\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(125) && this.lookaheadInLineCharCode() === 123) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n          return id;\n        } else {\n          this.unexpected();\n        }\n    }\n  }\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      this.unexpected();\n    }\n  }\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\n          at: startLoc\n        });\n      }\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n      case \"smart\":\n        return tokenType === 27;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\n          at: startLoc\n        });\n    }\n  }\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition()\n      });\n    }\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, {\n        at: node\n      });\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, {\n        at: node\n      });\n    }\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"Super\");\n  }\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      if (this.match(102)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n    if (this.isContextual(100)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, {\n          at: id\n        });\n      }\n      this.sawUnambiguousESM = true;\n    }\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n      if (this.match(21)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startLoc);\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n    return this.wrapParenthesis(startLoc, val);\n  }\n  wrapParenthesis(startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n    const parenExpression = this.startNodeAt(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n  parseParenItem(node, startLoc) {\n    return node;\n  }\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction) {\n        this.raise(Errors.UnexpectedNewTarget, {\n          at: metaProp\n        });\n      }\n      return metaProp;\n    }\n    return this.parseNew(node);\n  }\n  parseNew(node) {\n    this.parseNewCallee(node);\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n    return this.finishNode(node, \"NewExpression\");\n  }\n  parseNewCallee(node) {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, {\n        at: node.callee\n      });\n    }\n  }\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\n        });\n      }\n    }\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, {\n          at: prop\n        });\n      }\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n      node.properties.push(prop);\n    }\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc\n        });\n      }\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n    prop.method = false;\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n  checkGetterSetterParams(method) {\n    var _params;\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: method\n      });\n    }\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: method\n      });\n    }\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc\n          });\n        }\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 132:\n            key = this.parseNumericLiteral(value);\n            break;\n          case 131:\n            key = this.parseStringLiteral(value);\n            break;\n          case 133:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case 134:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case 136:\n            {\n              const privateKeyLoc = this.state.startLoc;\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, {\n                  at: privateKeyLoc\n                });\n              }\n              key = this.parsePrivateName();\n              break;\n            }\n          default:\n            this.unexpected();\n        }\n      }\n      prop.key = key;\n      if (type !== 136) {\n        prop.computed = false;\n      }\n    }\n    return prop.key;\n  }\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, {\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\n          });\n        }\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\"\n        });\n      }\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n    return elt;\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      this.unexpected();\n    }\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(130);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word\n      });\n      return;\n    }\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc\n        });\n        return;\n      }\n      this.expressionScope.recordAsyncArrowParametersError({\n        at: startLoc\n      });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, {\n          at: startLoc\n        });\n        return;\n      }\n    }\n  }\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n  parseAwait(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\n      at: node\n    });\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, {\n        at: node\n      });\n    }\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 101 && !this.state.containsEsc || type === 135 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\n      at: node\n    });\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n      switch (this.state.type) {\n        case 13:\n        case 137:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc\n        });\n      }\n    }\n  }\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, {\n        at: this.state.startLoc\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, {\n        at: startLoc\n      });\n    }\n  }\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n  parseFSharpPipelineBody(prec) {\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    if (!this.match(5)) {\n      this.unexpected(null, 5);\n    }\n    const program = this.startNodeAt(this.state.endLoc);\n    this.next();\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n  parsePropertyNamePrefixOperator(prop) {}\n}\nconst loopLabel = {\n    kind: \"loop\"\n  },\n  switchLabel = {\n    kind: \"switch\"\n  };\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n    if (typeof type === \"number\") {\n      {\n        if (type === 136) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(130),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n    return this.finishNode(file, \"File\");\n  }\n  parseProgram(program, end = 137, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, {\n          at,\n          localName\n        });\n      }\n    }\n    let finishedProgram;\n    if (end === 137) {\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\n    }\n    return finishedProgram;\n  }\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet() {\n    if (!this.isContextual(99)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === 92) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  chStartsBindingPattern(ch) {\n    return ch === 91 || ch === 123;\n  }\n  hasFollowingBindingAtom() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\n  }\n  hasInLineFollowingBindingIdentifier() {\n    const next = this.nextTokenInLineStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n  startsUsingForOf() {\n    const {\n      type,\n      containsEsc\n    } = this.lookahead();\n    if (type === 101 && !containsEsc) {\n      return false;\n    } else if (tokenIsIdentifier(type) && !this.hasFollowingLineBreak()) {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n  parseModuleItem() {\n    return this.parseStatementLike(1 | 2 | 4 | 8);\n  }\n  parseStatementListItem() {\n    return this.parseStatementLike(2 | 4 | (!this.options.annexB || this.state.strict ? 0 : 8));\n  }\n  parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction = false) {\n    let flags = 0;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= 4;\n      if (allowLabeledFunction) {\n        flags |= 8;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n  parseStatement() {\n    return this.parseStatementLike(0);\n  }\n  parseStatementLike(flags) {\n    let decorators = null;\n    if (this.match(26)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n  parseStatementContent(flags, decorators) {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & 2);\n    const allowFunctionDeclaration = !!(flags & 4);\n    const topLevel = flags & 1;\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n      case 64:\n        return this.parseDebuggerStatement(node);\n      case 90:\n        return this.parseDoWhileStatement(node);\n      case 91:\n        return this.parseForStatement(node);\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(this.state.strict ? Errors.StrictFunction : this.options.annexB ? Errors.SloppyFunctionAnnexB : Errors.SloppyFunction, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\n      case 80:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\n      case 69:\n        return this.parseIfStatement(node);\n      case 70:\n        return this.parseReturnStatement(node);\n      case 71:\n        return this.parseSwitchStatement(node);\n      case 72:\n        return this.parseThrowStatement(node);\n      case 73:\n        return this.parseTryStatement(node);\n      case 105:\n        if (this.state.containsEsc || !this.hasInLineFollowingBindingIdentifier()) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseVarStatement(node, \"using\");\n      case 99:\n        {\n          if (this.state.containsEsc) {\n            break;\n          }\n          const next = this.nextTokenStart();\n          const nextCh = this.codePointAtPos(next);\n          if (nextCh !== 91) {\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\n              break;\n            }\n          }\n        }\n      case 75:\n        {\n          if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: this.state.startLoc\n            });\n          }\n        }\n      case 74:\n        {\n          const kind = this.state.value;\n          return this.parseVarStatement(node, kind);\n        }\n      case 92:\n        return this.parseWhileStatement(node);\n      case 76:\n        return this.parseWithStatement(node);\n      case 5:\n        return this.parseBlock();\n      case 13:\n        return this.parseEmptyStatement(node);\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, {\n              at: this.state.startLoc\n            });\n          }\n          this.next();\n          let result;\n          if (starttype === 83) {\n            result = this.parseImport(node);\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node, decorators);\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (!allowDeclaration) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n                at: this.state.startLoc\n              });\n            }\n            this.next();\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\n          }\n        }\n    }\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\n    } else {\n      return this.parseExpressionStatement(node, expr, decorators);\n    }\n  }\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, {\n        at: node\n      });\n    }\n  }\n  decoratorsEnabledBeforeExport() {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false;\n  }\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        if (typeof this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== \"boolean\") {\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0]\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n  parseDecorators(allowExport) {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(26));\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, {\n          at: this.state.startLoc\n        });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    return decorators;\n  }\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr;\n      if (this.match(10)) {\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(136)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n    return expr;\n  }\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  verifyBreakContinue(node, isBreak) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, {\n        at: node,\n        type\n      });\n    }\n  }\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n  parseDoWhileStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n    const startsWithLet = this.isContextual(99);\n    const startsWithUsing = this.isContextual(105);\n    const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || startsWithUsing && this.startsUsingForOf();\n    if (this.match(74) || this.match(75) || isLetOrUsing) {\n      const initNode = this.startNode();\n      const kind = this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n      const isForIn = this.match(58);\n      if (isForIn && startsWithUsing) {\n        this.raise(Errors.ForInUsing, {\n          at: init\n        });\n      }\n      if ((isForIn || this.isContextual(101)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(101);\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, {\n          at: init\n        });\n      }\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, {\n          at: init\n        });\n      }\n    }\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\n    this.next();\n    return this.parseFunction(node, 1 | (isHangingDeclaration ? 2 : 0) | (isAsync ? 8 : 0));\n  }\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n  parseThrowStatement(node) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    this.scope.enter(this.options.annexB && param.type === \"Identifier\" ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: BIND_CATCH_PARAM\n    });\n    return param;\n  }\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"TryStatement\");\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    return this.finishNode(node, \"WithStatement\");\n  }\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n  parseLabeledStatement(node, maybeName, expr, flags) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName\n        });\n      }\n    }\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = flags & 8 ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true) : this.parseStatement();\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(5);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n    while (!this.match(end)) {\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n          continue;\n        }\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n    this.next();\n  }\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || !this.options.annexB || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(101)))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(101))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\"\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n    return node;\n  }\n  parseVarId(decl, kind) {\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL\n    });\n    decl.id = id;\n  }\n  parseAsyncFunctionExpression(node) {\n    return this.parseFunction(node, 8);\n  }\n  parseFunction(node, flags = 0) {\n    const hangingDeclaration = flags & 2;\n    const isDeclaration = !!(flags & 1);\n    const requireId = isDeclaration && !(flags & 4);\n    const isAsync = !!(flags & 8);\n    this.initFunction(node, isAsync);\n    if (this.match(55)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc\n        });\n      }\n      this.next();\n      node.generator = true;\n    }\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n    if (isDeclaration && !hangingDeclaration) {\n      this.registerFunctionStatementId(node);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n  parseFunctionParams(node, isConstructor) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, 2 | (isConstructor ? 4 : 0));\n    this.expressionScope.exit();\n  }\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, !this.options.annexB || this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.loc.start);\n  }\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n  isClassMethod() {\n    return this.match(10);\n  }\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc\n            });\n          }\n          continue;\n        }\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n        const member = this.startNode();\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n        this.parseClassMember(classBody, member, state);\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, {\n            at: member\n          });\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(104);\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(136);\n      this.parseClassElementName(method);\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key\n        });\n      }\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(136);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, {\n            at: key\n          });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, {\n            at: key\n          });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n      method.kind = \"method\";\n      const isPrivate = this.match(136);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicMethod);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n    if ((type === 130 || type === 131) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, {\n        at: this.state.startLoc\n      });\n    }\n    if (type === 136) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n    return this.parsePropertyName(member);\n  }\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, {\n        at: member\n      });\n    }\n  }\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, {\n        at: prop.key\n      });\n    }\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n  }\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, {\n          at: key\n        });\n      }\n    }\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n    }\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {}\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, {\n          at: this.state.startLoc\n        });\n      }\n    }\n  }\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n  parseExport(node, decorators) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      this.unexpected(null, 5);\n    }\n    if (hasNamespace && parseAfterNamespace) {\n      this.unexpected(null, 97);\n    }\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      var _node2$declaration;\n      const node2 = node;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n    if (this.eat(65)) {\n      const node2 = node;\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.checkExport(node2, true, true);\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n    this.unexpected(null, 5);\n  }\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    if (this.match(68)) {\n      this.next();\n      return this.parseFunction(expr, 1 | 4);\n    } else if (this.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(expr, 1 | 4 | 8);\n    }\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n        this.raise(Errors.DecoratorBeforeExport, {\n          at: this.state.startLoc\n        });\n      }\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\n    }\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc\n      });\n    }\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n  parseExportDeclaration(node) {\n    if (this.match(80)) {\n      const node = this.parseClass(this.startNode(), true, false);\n      return node;\n    }\n    return this.parseStatementListItem();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 99) {\n        return false;\n      }\n      if ((type === 128 || type === 127) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n        if (tokenIsIdentifier(nextType) && nextType !== 97 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n    return false;\n  }\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(97)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n    this.semicolon();\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc\n          });\n        }\n        return true;\n      }\n    }\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n          const declaration = node.declaration;\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, {\n          at: node\n        });\n      } else {\n        this.raise(Errors.DuplicateExport, {\n          at: node,\n          exportName\n        });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(128);\n      const isString = this.match(131);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n    return nodes;\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n  parseModuleExportName() {\n    if (this.match(131)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n    return false;\n  }\n  checkImportReflection(node) {\n    if (node.module) {\n      var _node$assertions;\n      if (node.specifiers.length !== 1 || node.specifiers[0].type !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n    }\n  }\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start\n          });\n        }\n      }\n    }\n  }\n  parseMaybeImportReflection(node) {\n    let isImportReflection = false;\n    if (this.isContextual(125)) {\n      const lookahead = this.lookahead();\n      const nextType = lookahead.type;\n      if (tokenIsIdentifier(nextType)) {\n        if (nextType !== 97) {\n          isImportReflection = true;\n        } else {\n          const nextNextTokenFirstChar = this.input.charCodeAt(this.nextTokenStartSince(lookahead.end));\n          if (nextNextTokenFirstChar === 102) {\n            isImportReflection = true;\n          }\n        }\n      } else if (nextType !== 12) {\n        isImportReflection = true;\n      }\n    }\n    if (isImportReflection) {\n      this.expectPlugin(\"importReflection\");\n      this.next();\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n  }\n  parseImport(node) {\n    node.specifiers = [];\n    if (!this.match(131)) {\n      this.parseMaybeImportReflection(node);\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(97);\n    }\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    if (!this.match(131)) this.unexpected();\n    return this.parseExprAtom();\n  }\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  finishImportSpecifier(specifier, type, bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: {\n        type\n      },\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n    do {\n      if (this.match(8)) {\n        break;\n      }\n      const node = this.startNode();\n      const keyName = this.state.value;\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(131)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseModuleAttributes() {\n    if (this.match(76) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key\n        });\n      }\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseImportAssertions() {\n    if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc\n          });\n        }\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const specifier = this.startNode();\n      const importedIsString = this.match(131);\n      const isMaybeTypeOnly = this.isContextual(128);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\nfunction parse(input, options) {\n  var _options;\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\nconst tokTypes = generateExportedTokenTypes(tt);\nfunction getParser(options, input) {\n  let cls = Parser;\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n  return new cls(options, input);\n}\nconst parserClassCache = {};\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n// https://tc39.es/ecma262/#sec-execution-contexts\nexport class ExecutionContext {\n  constructor() {\n    _defineProperty(this, \"VariableEnvironment\", void 0);\n    _defineProperty(this, \"LexicalEnvironment\", void 0);\n    _defineProperty(this, \"Function\", void 0);\n  }\n}\n// https://tc39.es/ecma262/#sec-environment-records\nexport class EnvironmentRecord {\n  constructor(outer) {\n    _defineProperty(this, \"OuterEnv\", void 0);\n    _defineProperty(this, \"bindingMap\", new Map());\n    this.OuterEnv = outer;\n  }\n  HasBinding(name) {\n    return this.bindingMap.has(name);\n  }\n  CreateMutableBinding(name, deletable) {\n    // Assert: binding does not exist.\n    this.bindingMap.set(name, {\n      mutable: true,\n      deletable\n    });\n    return NormalCompletion(undefined);\n  }\n\n  /**\n   * Create an immutable binding.\n   *\n   * @param name - The binding name.\n   * @param strict - For named function expressions, strict is false, otherwise it's true.\n   * @returns CompletionRecord.\n   */\n  CreateImmutableBinding(name, strict) {\n    // Assert: binding does not exist.\n    this.bindingMap.set(name, {\n      strict\n    });\n    return NormalCompletion(undefined);\n  }\n  InitializeBinding(name, value) {\n    var binding = this.bindingMap.get(name);\n    // Assert: binding exists and uninitialized.\n    Object.assign(binding, {\n      initialized: true,\n      value\n    });\n    return NormalCompletion(undefined);\n  }\n\n  /**\n   * Update a mutable binding value, including function declarations.\n   *\n   * @param name - The binding name.\n   * @param value - The binding value.\n   * @param strict - For functions, strict is always false, otherwise it depends on strict-mode.\n   * @returns\n   */\n  SetMutableBinding(name, value, strict) {\n    var binding = this.bindingMap.get(name);\n    // Assert: binding exists.\n    if (!binding.initialized) {\n      throw new ReferenceError(\"\".concat(name, \" is not initialized\"));\n    } else if (binding.mutable) {\n      binding.value = value;\n    } else {\n      throw new TypeError(\"Assignment to constant variable\");\n    }\n    return NormalCompletion(undefined);\n  }\n  GetBindingValue(name, strict) {\n    var binding = this.bindingMap.get(name);\n    // Assert: binding exists.\n    if (!binding.initialized) {\n      throw new ReferenceError(\"\".concat(name, \" is not initialized\"));\n    }\n    return binding.value;\n  }\n}\nexport class DeclarativeEnvironment extends EnvironmentRecord {}\nexport class FunctionEnvironment extends EnvironmentRecord {}\nexport var SourceNode = Symbol.for(\"SourceNode\");\nexport var FormalParameters = Symbol.for(\"FormalParameters\");\nexport var ECMAScriptCode = Symbol.for(\"ECMAScriptCode\");\nexport var Environment = Symbol.for(\"Environment\");\nexport var IsConstructor = Symbol.for(\"IsConstructor\");\n// https://tc39.es/ecma262/#sec-reference-record-specification-type\nexport class ReferenceRecord {\n  /** Whether the reference is in strict mode. */\n\n  constructor(base, referenceName, strict) {\n    _defineProperty(this, \"Base\", void 0);\n    _defineProperty(this, \"ReferenceName\", void 0);\n    _defineProperty(this, \"Strict\", void 0);\n    this.Base = base;\n    this.ReferenceName = referenceName;\n    this.Strict = strict;\n  }\n}\n\n// https://tc39.es/ecma262/#sec-completion-record-specification-type\nexport class CompletionRecord {\n  constructor(type, value) {\n    _defineProperty(this, \"Type\", void 0);\n    _defineProperty(this, \"Value\", void 0);\n    this.Type = type;\n    this.Value = value;\n  }\n}\n// https://tc39.es/ecma262/#sec-normalcompletion\nexport function NormalCompletion(value) {\n  return new CompletionRecord(\"normal\", value);\n}\nexport var Empty = Symbol(\"empty completion\");\n//# sourceMappingURL=ExecutionContext.js.map","export function collectBoundNames(root) {\n  var names = new Set();\n  var collect = node => {\n    if (Array.isArray(node)) {\n      for (var n of node) {\n        collect(n);\n      }\n    } else if (node) {\n      // `node` maybe `null` in some cases.\n      switch (node.type) {\n        case \"Identifier\":\n          names.add(node.name);\n          return;\n        case \"VariableDeclaration\":\n          return collect(node.declarations);\n        case \"VariableDeclarator\":\n          return collect(node.id);\n        case \"ArrayPattern\":\n          return collect(node.elements);\n        case \"AssignmentPattern\":\n          return collect(node.left);\n        case \"ObjectPattern\":\n          return collect(node.properties);\n        case \"Property\":\n          return collect(node.value);\n        case \"RestElement\":\n          return collect(node.argument);\n        case \"FunctionDeclaration\":\n          return collect(node.id);\n      }\n    }\n  };\n  collect(root);\n  return Array.from(names);\n}\nexport function containsExpression(root) {\n  var collect = node => {\n    if (Array.isArray(node)) {\n      return node.some(collect);\n    } else if (node) {\n      // `node` maybe `null` in some cases.\n      switch (node.type) {\n        case \"ArrayPattern\":\n          return collect(node.elements);\n        case \"AssignmentPattern\":\n          return true;\n        case \"ObjectPattern\":\n          return collect(node.properties);\n        case \"Property\":\n          return node.computed || collect(node.value);\n        case \"RestElement\":\n          return collect(node.argument);\n      }\n    }\n  };\n  return collect(root);\n}\nexport function collectScopedDeclarations(root, options) {\n  var declarations = [];\n  var nextOptions = {\n    var: options.var\n  };\n  var collect = (node, options) => {\n    if (Array.isArray(node)) {\n      for (var n of node) {\n        collect(n, options);\n      }\n    } else if (node) {\n      // `node` maybe `null` in some cases.\n      switch (node.type) {\n        case \"FunctionDeclaration\":\n          // At the top level of a function, or script, function declarations are\n          // treated like var declarations rather than like lexical declarations.\n          // See https://tc39.es/ecma262/#sec-static-semantics-toplevellexicallydeclarednames\n          if (Number(!options.var) ^ Number(options.topLevel)) {\n            declarations.push(node);\n          }\n          return;\n        case \"VariableDeclaration\":\n          if (Number(!options.var) ^ Number(node.kind === \"var\")) {\n            declarations.push(node);\n          }\n          return;\n        case \"SwitchCase\":\n          collect(node.consequent, nextOptions);\n          return;\n        case \"CatchClause\":\n          collect(node.body, nextOptions);\n          return;\n      }\n      if (options.var) {\n        switch (node.type) {\n          case \"BlockStatement\":\n            collect(node.body, nextOptions);\n            return;\n          case \"IfStatement\":\n            collect(node.consequent, nextOptions);\n            collect(node.alternate, nextOptions);\n            return;\n          case \"DoWhileStatement\":\n          case \"WhileStatement\":\n            collect(node.body, nextOptions);\n            return;\n          case \"ForStatement\":\n            collect(node.init, nextOptions);\n            collect(node.body, nextOptions);\n            return;\n          case \"ForInStatement\":\n          case \"ForOfStatement\":\n            collect(node.left, nextOptions);\n            collect(node.body, nextOptions);\n            return;\n          case \"SwitchStatement\":\n            collect(node.cases, nextOptions);\n            return;\n          case \"TryStatement\":\n            collect(node.block, nextOptions);\n            collect(node.handler, nextOptions);\n            collect(node.finalizer, nextOptions);\n            return;\n        }\n      }\n    }\n  };\n  collect(root, options);\n  return declarations;\n}\n//# sourceMappingURL=traverse.js.map","import { CompletionRecord, Empty, EnvironmentRecord, NormalCompletion, ReferenceRecord } from \"./ExecutionContext.js\";\nimport { collectBoundNames } from \"./traverse.js\";\n\n// https://tc39.es/ecma262/#sec-ispropertyreference\nexport function IsPropertyReference(V) {\n  return V.Base !== \"unresolvable\" && !(V.Base instanceof EnvironmentRecord);\n}\n\n// https://tc39.es/ecma262/#sec-initializereferencedbinding\nexport function InitializeReferencedBinding(V, W) {\n  var base = V.Base;\n  return base.InitializeBinding(V.ReferenceName, W);\n}\n\n// https://tc39.es/ecma262/#sec-copydataproperties\nexport function CopyDataProperties(target, source, excludedItems) {\n  if (source === undefined || source === null) {\n    return target;\n  }\n  var keys = Object.getOwnPropertyNames(source).concat(Object.getOwnPropertySymbols(source));\n  for (var nextKey of keys) {\n    if (!excludedItems.has(nextKey)) {\n      var desc = Object.getOwnPropertyDescriptor(source, nextKey);\n      if (desc !== null && desc !== void 0 && desc.enumerable) {\n        target[nextKey] = source[nextKey];\n      }\n    }\n  }\n  return target;\n}\n\n// https://tc39.es/ecma262/#sec-runtime-semantics-fordeclarationbindinginstantiation\nexport function ForDeclarationBindingInstantiation(forDeclaration, env) {\n  var isConst = forDeclaration.kind === \"const\";\n  for (var name of collectBoundNames(forDeclaration)) {\n    if (isConst) {\n      env.CreateImmutableBinding(name, true);\n    } else {\n      env.CreateMutableBinding(name, false);\n    }\n  }\n}\n\n// https://tc39.es/ecma262/#sec-loopcontinues\nexport function LoopContinues(completion) {\n  return completion.Type === \"normal\" || completion.Type == \"continue\";\n}\n\n// https://tc39.es/ecma262/#sec-updateempty\nexport function UpdateEmpty(completion, value) {\n  if (completion.Value !== Empty) {\n    return completion;\n  }\n  return new CompletionRecord(completion.Type, value);\n}\n\n// https://tc39.es/ecma262/#sec-getvalue\nexport function GetValue(V) {\n  if (V instanceof CompletionRecord) {\n    // Assert: V.Type is normal.\n    V = V.Value;\n  }\n  if (!(V instanceof ReferenceRecord)) {\n    return V;\n  }\n  if (V.Base === \"unresolvable\") {\n    throw new ReferenceError(\"\".concat(V.ReferenceName, \" is not defined\"));\n  }\n  if (V.Base instanceof EnvironmentRecord) {\n    var base = V.Base;\n    return base.GetBindingValue(V.ReferenceName, V.Strict);\n  }\n  return V.Base[V.ReferenceName];\n}\n\n// https://tc39.es/ecma262/#sec-topropertykey\nexport function ToPropertyKey(arg) {\n  if (typeof arg === \"symbol\") {\n    return arg;\n  }\n  return String(arg);\n}\n\n// https://tc39.es/ecma262/#sec-getv\nexport function GetV(V, P) {\n  return V[P];\n}\n\n// https://tc39.es/ecma262/#sec-putvalue\nexport function PutValue(V, W) {\n  // Assert: V is a ReferenceRecord.\n  if (V.Base === \"unresolvable\") {\n    throw new ReferenceError(\"\".concat(V.ReferenceName, \" is not defined\"));\n  }\n  if (V.Base instanceof EnvironmentRecord) {\n    return V.Base.SetMutableBinding(V.ReferenceName, W, V.Strict);\n  }\n  V.Base[V.ReferenceName] = W;\n  return NormalCompletion(undefined);\n}\n\n// https://tc39.es/ecma262/#sec-createlistiteratorRecord\nexport function CreateListIteratorRecord(args) {\n  if (!isIterable(args)) {\n    throw new TypeError(\"\".concat(typeof args, \" is not iterable\"));\n  }\n  return args[Symbol.iterator]();\n}\n\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nexport function RequireObjectCoercible(arg) {\n  if (arg === null || arg === undefined) {\n    throw new TypeError(\"Cannot destructure properties of undefined or null\");\n  }\n}\n\n// https://tc39.es/ecma262/#sec-getidentifierreference\nexport function GetIdentifierReference(env, name, strict) {\n  if (!env) {\n    return new ReferenceRecord(\"unresolvable\", name, strict);\n  }\n  if (env.HasBinding(name)) {\n    return new ReferenceRecord(env, name, strict);\n  }\n  return GetIdentifierReference(env.OuterEnv, name, strict);\n}\n\n// https://tc39.es/ecma262/#sec-applystringornumericbinaryoperator\nexport function ApplyStringOrNumericBinaryOperator(leftValue, operator, rightValue) {\n  switch (operator) {\n    case \"+\":\n      return leftValue + rightValue;\n    case \"-\":\n      return leftValue - rightValue;\n    case \"/\":\n      return leftValue / rightValue;\n    case \"%\":\n      return leftValue % rightValue;\n    case \"*\":\n      return leftValue * rightValue;\n    case \"**\":\n      return leftValue ** rightValue;\n    case \"==\":\n      return leftValue == rightValue;\n    case \"===\":\n      return leftValue === rightValue;\n    case \"!=\":\n      return leftValue != rightValue;\n    case \"!==\":\n      return leftValue !== rightValue;\n    case \">\":\n      return leftValue > rightValue;\n    case \"<\":\n      return leftValue < rightValue;\n    case \">=\":\n      return leftValue >= rightValue;\n    case \"<=\":\n      return leftValue <= rightValue;\n  }\n  throw new SyntaxError(\"Unsupported binary operator `\".concat(operator, \"`\"));\n}\n\n// https://tc39.es/ecma262/#sec-assignment-operators\nexport function ApplyStringOrNumericAssignment(leftValue, operator, rightValue) {\n  switch (operator) {\n    case \"+=\":\n    case \"-=\":\n    case \"*=\":\n    case \"/=\":\n    case \"%=\":\n    case \"**=\":\n      return ApplyStringOrNumericBinaryOperator(leftValue, operator.substr(0, operator.length - 1), rightValue);\n  }\n  throw new SyntaxError(\"Unsupported assignment operator `\".concat(operator, \"`\"));\n}\n\n// https://tc39.es/ecma262/#sec-unary-operators\nexport function ApplyUnaryOperator(target, operator) {\n  switch (operator) {\n    case \"!\":\n      return !target;\n    case \"+\":\n      return +target;\n    case \"-\":\n      return -target;\n    case \"void\":\n      return undefined;\n  }\n  throw new SyntaxError(\"Unsupported unary operator `\".concat(operator, \"`\"));\n}\nexport function isIterable(cooked) {\n  if (Array.isArray(cooked)) {\n    return true;\n  }\n  if (cooked === null || cooked === undefined) {\n    return false;\n  }\n  return typeof cooked[Symbol.iterator] === \"function\";\n}\n//# sourceMappingURL=context-free.js.map","// Ref https://github.com/tc39/proposal-global\n// In addition, the es6-shim had to switch from Function('return this')()\n// due to CSP concerns, such that the current check to handle browsers,\n// node, web workers, and frames is:\n// istanbul ignore next\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw new Error(\"unable to locate global object\");\n}\n\n/**\n * There are chances to construct a `Function` from a string, etc.\n * ```\n * ((a,b)=>a[b])(()=>1, 'constructor')('console.log(`yo`)')()\n * ```\n */\nvar reservedObjects = new WeakSet([\n// `Function(\"...\")` is considered *extremely vulnerable*.\nFunction,\n// `Object.assign()` is considered vulnerable.\nObject,\n// `prototype` is considered vulnerable.\nFunction.prototype, Object.prototype,\n// Global `window` is considered vulnerable, too.\ngetGlobal()]);\nexport function sanitize(cooked) {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  if (reservedObjects.has(cooked)) {\n    throw new TypeError(\"Cannot access reserved objects such as `Function`.\");\n  }\n}\nvar allowedConstructors = new WeakSet([Array, Map, Set, URLSearchParams, WeakMap, WeakSet, RegExp]);\nexport function isAllowedConstructor(constructor) {\n  // `Date` maybe mocked when running tests for storyboard functions.\n  return allowedConstructors.has(constructor) || constructor === Date;\n}\n//# sourceMappingURL=sanitize.js.map","import { ApplyStringOrNumericAssignment, CreateListIteratorRecord, ApplyStringOrNumericBinaryOperator, GetV, GetValue, InitializeReferencedBinding, IsPropertyReference, LoopContinues, PutValue, RequireObjectCoercible, ToPropertyKey, UpdateEmpty, ApplyUnaryOperator, GetIdentifierReference, ForDeclarationBindingInstantiation, CopyDataProperties } from \"./context-free.js\";\nimport { CompletionRecord, DeclarativeEnvironment, ECMAScriptCode, Empty, Environment, ExecutionContext, FormalParameters, FunctionEnvironment, IsConstructor, NormalCompletion, ReferenceRecord, SourceNode } from \"./ExecutionContext.js\";\nimport { sanitize, isAllowedConstructor } from \"./sanitize.js\";\nimport { collectBoundNames, collectScopedDeclarations, containsExpression } from \"./traverse.js\";\n/** For next-core internal usage only. */\nexport function cook(rootAst, codeSource) {\n  var _hooks$beforeEvaluate3;\n  var {\n    rules,\n    globalVariables = {},\n    hooks = {}\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var expressionOnly = rootAst.type !== \"FunctionDeclaration\";\n  var rootEnv = new DeclarativeEnvironment(null);\n  var rootContext = new ExecutionContext();\n  rootContext.VariableEnvironment = rootEnv;\n  rootContext.LexicalEnvironment = rootEnv;\n  var executionContextStack = [rootContext];\n  for (var [key, value] of Object.entries(globalVariables)) {\n    rootEnv.CreateImmutableBinding(key, true);\n    rootEnv.InitializeBinding(key, value);\n  }\n  var TemplateMap = new WeakMap();\n\n  // https://tc39.es/ecma262/#sec-gettemplateobject\n  function GetTemplateObject(templateLiteral) {\n    var memo = TemplateMap.get(templateLiteral);\n    if (memo) {\n      return memo;\n    }\n    var rawObj = templateLiteral.quasis.map(quasi => quasi.value.raw);\n    var template = templateLiteral.quasis.map(quasi => quasi.value.cooked);\n    Object.freeze(rawObj);\n    Object.defineProperty(template, \"raw\", {\n      value: rawObj,\n      writable: false,\n      enumerable: false,\n      configurable: false\n    });\n    Object.freeze(template);\n    TemplateMap.set(templateLiteral, template);\n    return template;\n  }\n  function Evaluate(node, optionalChainRef) {\n    var _hooks$beforeEvaluate, _hooks$beforeBranch, _hooks$beforeBranch2;\n    (_hooks$beforeEvaluate = hooks.beforeEvaluate) === null || _hooks$beforeEvaluate === void 0 ? void 0 : _hooks$beforeEvaluate.call(hooks, node);\n    // Expressions:\n    switch (node.type) {\n      case \"ArrayExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-array-initializer\n          var array = [];\n          for (var element of node.elements) {\n            if (!element) {\n              array.length += 1;\n            } else if (element.type === \"SpreadElement\") {\n              var spreadValues = GetValue(Evaluate(element.argument));\n              array.push(...spreadValues);\n            } else {\n              array.push(GetValue(Evaluate(element)));\n            }\n          }\n          return NormalCompletion(array);\n        }\n      case \"ArrowFunctionExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-arrow-function-definitions\n          ThrowIfFunctionIsInvalid(node);\n          var closure = InstantiateArrowFunctionExpression(node);\n          return NormalCompletion(closure);\n        }\n      case \"BinaryExpression\":\n        {\n          var leftRef = Evaluate(node.left);\n          var leftValue = GetValue(leftRef);\n          var rightRef = Evaluate(node.right).Value;\n          var rightValue = GetValue(rightRef);\n          if (expressionOnly && node.operator === \"|>\") {\n            // Minimal pipeline operator is supported only in expression-only mode.\n            // See https://tc39.es/proposal-pipeline-operator\n            // and https://github.com/tc39/proposal-pipeline-operator\n            if (typeof rightValue !== \"function\") {\n              var funcName = codeSource.substring(node.right.start, node.right.end);\n              throw new TypeError(\"\".concat(funcName, \" is not a function\"));\n            }\n            var thisValue;\n            if (rightRef instanceof ReferenceRecord) {\n              if (IsPropertyReference(rightRef)) {\n                thisValue = rightRef.Base;\n              }\n            }\n            return NormalCompletion(rightValue.call(thisValue, leftValue));\n          }\n          // https://tc39.es/ecma262/#sec-additive-operators\n          var result = ApplyStringOrNumericBinaryOperator(leftValue, node.operator, rightValue);\n          return NormalCompletion(result);\n        }\n      case \"CallExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-function-calls\n          var ref = Evaluate(node.callee, optionalChainRef).Value;\n          var func = GetValue(ref);\n          if ((func === undefined || func === null) && (node.optional || optionalChainRef !== null && optionalChainRef !== void 0 && optionalChainRef.skipped)) {\n            optionalChainRef.skipped = true;\n            return NormalCompletion(undefined);\n          }\n          sanitize(func);\n          return EvaluateCall(func, ref, node.arguments, node.callee);\n        }\n      case \"ChainExpression\":\n        // https://tc39.es/ecma262/#sec-optional-chains\n        return Evaluate(node.expression, {});\n      case \"ConditionalExpression\":\n        // https://tc39.es/ecma262/#sec-conditional-operator\n        return NormalCompletion(GetValue(Evaluate(GetValue(Evaluate(node.test)) ? node.consequent : node.alternate)));\n      case \"Identifier\":\n        // https://tc39.es/ecma262/#sec-identifiers\n        return NormalCompletion(ResolveBinding(node.name));\n      case \"Literal\":\n        {\n          // https://tc39.es/ecma262/#sec-primary-expression-literals\n          if (node.regex) {\n            if (node.value === null) {\n              // Invalid regular expression fails silently in @babel/parser.\n              throw new SyntaxError(\"Invalid regular expression: \".concat(node.raw));\n            }\n            if (node.regex.flags.includes(\"u\")) {\n              // Currently unicode flag is not fully supported across major browsers.\n              throw new SyntaxError(\"Unsupported unicode flag in regular expression: \".concat(node.raw));\n            }\n          }\n          return NormalCompletion(node.value);\n        }\n      case \"LogicalExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-binary-logical-operators\n          var _leftValue = GetValue(Evaluate(node.left));\n          switch (node.operator) {\n            case \"&&\":\n              return NormalCompletion(_leftValue && GetValue(Evaluate(node.right)));\n            case \"||\":\n              return NormalCompletion(_leftValue || GetValue(Evaluate(node.right)));\n            case \"??\":\n              return NormalCompletion(_leftValue !== null && _leftValue !== void 0 ? _leftValue : GetValue(Evaluate(node.right)));\n            // istanbul ignore next\n            default:\n              throw new SyntaxError( // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore never reach here.\n              \"Unsupported logical operator '\".concat(node.operator, \"'\"));\n          }\n        }\n      case \"MemberExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-property-accessors\n          var baseReference = Evaluate(node.object, optionalChainRef).Value;\n          var baseValue = GetValue(baseReference);\n          if ((baseValue === undefined || baseValue === null) && (node.optional || optionalChainRef !== null && optionalChainRef !== void 0 && optionalChainRef.skipped)) {\n            optionalChainRef.skipped = true;\n            return NormalCompletion(undefined);\n          }\n          sanitize(baseValue);\n          var _result = node.computed ? EvaluatePropertyAccessWithExpressionKey(baseValue, node.property, true) : EvaluatePropertyAccessWithIdentifierKey(baseValue, node.property, true);\n          sanitize(_result);\n          return NormalCompletion(_result);\n        }\n      case \"NewExpression\":\n        // https://tc39.es/ecma262/#sec-new-operator\n        return EvaluateNew(node.callee, node.arguments);\n      case \"ObjectExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-object-initializer\n          var object = {};\n          for (var prop of node.properties) {\n            if (prop.type === \"SpreadElement\") {\n              var fromValue = GetValue(Evaluate(prop.argument));\n              CopyDataProperties(object, fromValue, new Set());\n            } else {\n              if (prop.kind !== \"init\") {\n                throw new SyntaxError(\"Unsupported object getter/setter\");\n              }\n              var propName = !prop.computed && prop.key.type === \"Identifier\" ? prop.key.name : EvaluateComputedPropertyName(prop.key);\n              if (propName === \"__proto__\") {\n                throw new TypeError(\"Setting '__proto__' property is not allowed\");\n              }\n              object[propName] = GetValue(Evaluate(prop.value));\n            }\n          }\n          return NormalCompletion(object);\n        }\n      case \"SequenceExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-comma-operator\n          var _result2;\n          for (var expr of node.expressions) {\n            _result2 = NormalCompletion(GetValue(Evaluate(expr)));\n          }\n          return _result2;\n        }\n      case \"TemplateLiteral\":\n        {\n          // https://tc39.es/ecma262/#sec-template-literals\n          var chunks = [node.quasis[0].value.cooked];\n          var index = 0;\n          for (var _expr of node.expressions) {\n            var val = GetValue(Evaluate(_expr));\n            chunks.push(String(val));\n            chunks.push(node.quasis[index += 1].value.cooked);\n          }\n          return NormalCompletion(chunks.join(\"\"));\n        }\n      case \"TaggedTemplateExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-tagged-templates\n          var tagRef = Evaluate(node.tag).Value;\n          var tagFunc = GetValue(tagRef);\n          sanitize(tagFunc);\n          return EvaluateCall(tagFunc, tagRef, node.quasi, node.tag);\n        }\n      case \"UnaryExpression\":\n        {\n          // https://tc39.es/ecma262/#sec-unary-operators\n          var _ref = Evaluate(node.argument).Value;\n          if (!expressionOnly && node.operator === \"delete\") {\n            // Delete operator is supported only in function mode.\n            if (!(_ref instanceof ReferenceRecord)) {\n              return NormalCompletion(true);\n            }\n            // istanbul ignore else\n            if (IsPropertyReference(_ref)) {\n              var deleteStatus = delete _ref.Base[_ref.ReferenceName];\n              return NormalCompletion(deleteStatus);\n            }\n            // Should never reach here in strict mode.\n          }\n\n          if (node.operator === \"typeof\") {\n            if (_ref instanceof ReferenceRecord && _ref.Base === \"unresolvable\") {\n              return NormalCompletion(\"undefined\");\n            }\n            return NormalCompletion(typeof GetValue(_ref));\n          }\n          return NormalCompletion(ApplyUnaryOperator(GetValue(_ref), node.operator));\n        }\n    }\n    if (!expressionOnly) {\n      // Statements and assignments:\n      switch (node.type) {\n        case \"AssignmentExpression\":\n          {\n            // https://tc39.es/ecma262/#sec-assignment-operators\n            if (node.operator === \"=\") {\n              if (!(node.left.type === \"ArrayPattern\" || node.left.type === \"ObjectPattern\")) {\n                var _lref = Evaluate(node.left).Value;\n                // Todo: IsAnonymousFunctionDefinition(lref)\n                var _rref = Evaluate(node.right);\n                var _rval = GetValue(_rref);\n                PutValue(_lref, _rval);\n                return NormalCompletion(_rval);\n              }\n              var _rref2 = Evaluate(node.right);\n              var _rval2 = GetValue(_rref2);\n              DestructuringAssignmentEvaluation(node.left, _rval2);\n              return NormalCompletion(_rval2);\n            }\n            // Operators other than `=`.\n            var lref = Evaluate(node.left).Value;\n            var lval = GetValue(lref);\n            var rref = Evaluate(node.right);\n            var rval = GetValue(rref);\n            var r = ApplyStringOrNumericAssignment(lval, node.operator, rval);\n            PutValue(lref, r);\n            return NormalCompletion(r);\n          }\n        case \"BlockStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-block\n            if (!node.body.length) {\n              return NormalCompletion(Empty);\n            }\n            var oldEnv = getRunningContext().LexicalEnvironment;\n            var blockEnv = new DeclarativeEnvironment(oldEnv);\n            BlockDeclarationInstantiation(node.body, blockEnv);\n            getRunningContext().LexicalEnvironment = blockEnv;\n            var blockValue = EvaluateStatementList(node.body);\n            getRunningContext().LexicalEnvironment = oldEnv;\n            return blockValue;\n          }\n        case \"BreakStatement\":\n          // https://tc39.es/ecma262/#sec-break-statement\n          return new CompletionRecord(\"break\", Empty);\n        case \"ContinueStatement\":\n          // https://tc39.es/ecma262/#sec-continue-statement\n          return new CompletionRecord(\"continue\", Empty);\n        case \"EmptyStatement\":\n          // https://tc39.es/ecma262/#sec-empty-statement\n          return NormalCompletion(Empty);\n        case \"DoWhileStatement\":\n          // https://tc39.es/ecma262/#sec-do-while-statement\n          return EvaluateBreakableStatement(DoWhileLoopEvaluation(node));\n        case \"ExpressionStatement\":\n        case \"TSAsExpression\":\n          // https://tc39.es/ecma262/#sec-expression-statement\n          return Evaluate(node.expression);\n        case \"ForInStatement\":\n        case \"ForOfStatement\":\n          // https://tc39.es/ecma262/#sec-for-in-and-for-of-statements\n          return EvaluateBreakableStatement(ForInOfLoopEvaluation(node));\n        case \"ForStatement\":\n          // https://tc39.es/ecma262/#sec-for-statement\n          return EvaluateBreakableStatement(ForLoopEvaluation(node));\n        case \"FunctionDeclaration\":\n          // https://tc39.es/ecma262/#sec-function-definitions\n          return NormalCompletion(Empty);\n        case \"FunctionExpression\":\n          // https://tc39.es/ecma262/#sec-function-defining-expressions\n          ThrowIfFunctionIsInvalid(node);\n          return NormalCompletion(InstantiateOrdinaryFunctionExpression(node));\n        case \"IfStatement\":\n          // https://tc39.es/ecma262/#sec-if-statement\n          return GetValue(Evaluate(node.test)) ? ((_hooks$beforeBranch = hooks.beforeBranch) !== null && _hooks$beforeBranch !== void 0 && _hooks$beforeBranch.call(hooks, node, \"if\"), UpdateEmpty(Evaluate(node.consequent), undefined)) : ((_hooks$beforeBranch2 = hooks.beforeBranch) !== null && _hooks$beforeBranch2 !== void 0 && _hooks$beforeBranch2.call(hooks, node, \"else\"), node.alternate) ? UpdateEmpty(Evaluate(node.alternate), undefined) : NormalCompletion(undefined);\n        case \"ReturnStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-return-statement\n            var v;\n            if (node.argument) {\n              var exprRef = Evaluate(node.argument);\n              v = GetValue(exprRef);\n            }\n            return new CompletionRecord(\"return\", v);\n          }\n        case \"ThrowStatement\":\n          // https://tc39.es/ecma262/#sec-throw-statement\n          throw GetValue(Evaluate(node.argument));\n        case \"UpdateExpression\":\n          {\n            // https://tc39.es/ecma262/#sec-update-expressions\n            var lhs = Evaluate(node.argument).Value;\n            var oldValue = Number(GetValue(lhs));\n            var newValue = node.operator === \"++\" ? oldValue + 1 : oldValue - 1;\n            PutValue(lhs, newValue);\n            return NormalCompletion(node.prefix ? newValue : oldValue);\n          }\n        case \"SwitchCase\":\n          return EvaluateStatementList(node.consequent);\n        case \"SwitchStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-switch-statement\n            var _exprRef = Evaluate(node.discriminant);\n            var switchValue = GetValue(_exprRef);\n            var _oldEnv = getRunningContext().LexicalEnvironment;\n            var _blockEnv = new DeclarativeEnvironment(_oldEnv);\n            BlockDeclarationInstantiation(node.cases, _blockEnv);\n            getRunningContext().LexicalEnvironment = _blockEnv;\n            var R = CaseBlockEvaluation(node.cases, switchValue);\n            getRunningContext().LexicalEnvironment = _oldEnv;\n            return EvaluateBreakableStatement(R);\n          }\n        case \"TryStatement\":\n          {\n            // https://tc39.es/ecma262/#sec-try-statement\n            var _R;\n            try {\n              _R = Evaluate(node.block);\n            } catch (error) {\n              if (node.handler) {\n                var _hooks$beforeEvaluate2;\n                (_hooks$beforeEvaluate2 = hooks.beforeEvaluate) === null || _hooks$beforeEvaluate2 === void 0 ? void 0 : _hooks$beforeEvaluate2.call(hooks, node.handler);\n                _R = CatchClauseEvaluation(node.handler, error);\n              } else {\n                throw error;\n              }\n            } finally {\n              if (node.finalizer) {\n                var F = Evaluate(node.finalizer);\n                if (F.Type !== \"normal\") {\n                  _R = F;\n                }\n              }\n            }\n            return _R;\n          }\n        case \"VariableDeclaration\":\n          {\n            // https://tc39.es/ecma262/#sec-declarations-and-the-variable-statement\n            var _result3;\n            for (var declarator of node.declarations) {\n              if (!declarator.init) {\n                // Assert: a declarator without init is always an identifier.\n                if (node.kind === \"var\") {\n                  _result3 = NormalCompletion(Empty);\n                } else {\n                  var _lhs = ResolveBinding(declarator.id.name);\n                  _result3 = InitializeReferencedBinding(_lhs, undefined);\n                }\n              } else if (declarator.id.type === \"Identifier\") {\n                var bindingId = declarator.id.name;\n                var _lhs2 = ResolveBinding(bindingId);\n                // Todo: IsAnonymousFunctionDefinition(Initializer)\n                var rhs = Evaluate(declarator.init);\n                var _value = GetValue(rhs);\n                _result3 = node.kind === \"var\" ? PutValue(_lhs2, _value) : InitializeReferencedBinding(_lhs2, _value);\n              } else {\n                var _rhs = Evaluate(declarator.init);\n                var _rval3 = GetValue(_rhs);\n                _result3 = BindingInitialization(declarator.id, _rval3, node.kind === \"var\" ? undefined : getRunningContext().LexicalEnvironment);\n              }\n            }\n            return _result3;\n          }\n        case \"WhileStatement\":\n          // https://tc39.es/ecma262/#sec-while-statement\n          return EvaluateBreakableStatement(WhileLoopEvaluation(node));\n      }\n    }\n    // eslint-disable-next-line no-console\n    throw new SyntaxError(\"Unsupported node type `\".concat(node.type, \"`\"));\n  }\n\n  // https://tc39.es/ecma262/#sec-execution-contexts\n  function getRunningContext() {\n    return executionContextStack[executionContextStack.length - 1];\n  }\n\n  // https://tc39.es/ecma262/#sec-resolvebinding\n  function ResolveBinding(name, env) {\n    if (!env) {\n      env = getRunningContext().LexicalEnvironment;\n    }\n    return GetIdentifierReference(env, name, true);\n  }\n\n  // Try statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-catchclauseevaluation\n  function CatchClauseEvaluation(node, thrownValue) {\n    if (!node.param) {\n      return Evaluate(node.body);\n    }\n    var oldEnv = getRunningContext().LexicalEnvironment;\n    var catchEnv = new DeclarativeEnvironment(oldEnv);\n    for (var argName of collectBoundNames(node.param)) {\n      catchEnv.CreateMutableBinding(argName, false);\n    }\n    getRunningContext().LexicalEnvironment = catchEnv;\n    BindingInitialization(node.param, thrownValue, catchEnv);\n    var B = Evaluate(node.body);\n    getRunningContext().LexicalEnvironment = oldEnv;\n    return B;\n  }\n\n  // Iteration statements and switch statements.\n  // https://tc39.es/ecma262/#prod-BreakableStatement\n  function EvaluateBreakableStatement(stmtResult) {\n    return stmtResult.Type === \"break\" ? stmtResult.Value === Empty ? NormalCompletion(undefined) : NormalCompletion(stmtResult.Value) : stmtResult;\n  }\n\n  // Switch statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-caseblockevaluation\n  function CaseBlockEvaluation(cases, input) {\n    var V;\n    var defaultCaseIndex = cases.findIndex(switchCase => !switchCase.test);\n    var hasDefaultCase = defaultCaseIndex >= 0;\n    var A = hasDefaultCase ? cases.slice(0, defaultCaseIndex) : cases;\n    var found = false;\n    for (var C of A) {\n      if (!found) {\n        found = CaseClauseIsSelected(C, input);\n      }\n      if (found) {\n        var _R2 = Evaluate(C);\n        if (_R2.Value !== Empty) {\n          V = _R2.Value;\n        }\n        if (_R2.Type !== \"normal\") {\n          return UpdateEmpty(_R2, V);\n        }\n      }\n    }\n    if (!hasDefaultCase) {\n      return NormalCompletion(V);\n    }\n    var foundInB = false;\n    var B = cases.slice(defaultCaseIndex + 1);\n    if (!found) {\n      for (var _C of B) {\n        if (!foundInB) {\n          foundInB = CaseClauseIsSelected(_C, input);\n        }\n        if (foundInB) {\n          var _R3 = Evaluate(_C);\n          if (_R3.Value !== Empty) {\n            V = _R3.Value;\n          }\n          if (_R3.Type !== \"normal\") {\n            return UpdateEmpty(_R3, V);\n          }\n        }\n      }\n    }\n    if (foundInB) {\n      return NormalCompletion(V);\n    }\n    var R = Evaluate(cases[defaultCaseIndex]);\n    if (R.Value !== Empty) {\n      V = R.Value;\n    }\n    if (R.Type !== \"normal\") {\n      return UpdateEmpty(R, V);\n    }\n\n    // NOTE: The following is another complete iteration of the second CaseClauses.\n    for (var _C2 of B) {\n      var _R4 = Evaluate(_C2);\n      if (_R4.Value !== Empty) {\n        V = _R4.Value;\n      }\n      if (_R4.Type !== \"normal\") {\n        return UpdateEmpty(_R4, V);\n      }\n    }\n    return NormalCompletion(V);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-caseclauseisselected\n  function CaseClauseIsSelected(C, input) {\n    var clauseSelector = GetValue(Evaluate(C.test));\n    return input === clauseSelector;\n  }\n\n  // While statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-whileloopevaluation\n  function WhileLoopEvaluation(node) {\n    var V;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var exprValue = GetValue(Evaluate(node.test));\n      if (!exprValue) {\n        return NormalCompletion(V);\n      }\n      var stmtResult = Evaluate(node.body);\n      if (!LoopContinues(stmtResult)) {\n        return UpdateEmpty(stmtResult, V);\n      }\n      if (stmtResult.Value !== Empty) {\n        V = stmtResult.Value;\n      }\n    }\n  }\n\n  // Do-while Statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-dowhileloopevaluation\n  function DoWhileLoopEvaluation(node) {\n    var V;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var stmtResult = Evaluate(node.body);\n      if (!LoopContinues(stmtResult)) {\n        return UpdateEmpty(stmtResult, V);\n      }\n      if (stmtResult.Value !== Empty) {\n        V = stmtResult.Value;\n      }\n      var exprValue = GetValue(Evaluate(node.test));\n      if (!exprValue) {\n        return NormalCompletion(V);\n      }\n    }\n  }\n\n  // For in/of statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-forinofloopevaluation\n  function ForInOfLoopEvaluation(node) {\n    var lhs = node.left;\n    var isVariableDeclaration = lhs.type === \"VariableDeclaration\";\n    var lhsKind = isVariableDeclaration ? lhs.kind === \"var\" ? \"varBinding\" : \"lexicalBinding\" : \"assignment\";\n    var uninitializedBoundNames = lhsKind === \"lexicalBinding\" ? collectBoundNames(lhs) : [];\n    var iterationKind = node.type === \"ForInStatement\" ? \"enumerate\" : \"iterate\";\n    var keyResult = ForInOfHeadEvaluation(uninitializedBoundNames, node.right, iterationKind);\n    if (keyResult.Type !== \"normal\") {\n      // When enumerate, if the target is nil, a break completion will be returned.\n      return keyResult;\n    }\n    return ForInOfBodyEvaluation(lhs, node.body, keyResult.Value, iterationKind, lhsKind);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-forinofheadevaluation\n  function ForInOfHeadEvaluation(uninitializedBoundNames, expr, iterationKind) {\n    var runningContext = getRunningContext();\n    var oldEnv = runningContext.LexicalEnvironment;\n    if (uninitializedBoundNames.length > 0) {\n      var newEnv = new DeclarativeEnvironment(oldEnv);\n      for (var name of uninitializedBoundNames) {\n        newEnv.CreateMutableBinding(name, false);\n      }\n      runningContext.LexicalEnvironment = newEnv;\n    }\n    var exprRef = Evaluate(expr);\n    runningContext.LexicalEnvironment = oldEnv;\n    var exprValue = GetValue(exprRef);\n    if (iterationKind === \"enumerate\") {\n      if (exprValue === null || exprValue === undefined) {\n        return new CompletionRecord(\"break\", Empty);\n      }\n      var _iterator = EnumerateObjectProperties(exprValue);\n      return NormalCompletion(_iterator);\n    }\n    var iterator = CreateListIteratorRecord(exprValue);\n    return NormalCompletion(iterator);\n  }\n  function ForInOfBodyEvaluation(node, stmt, iteratorRecord, iterationKind, lhsKind) {\n    var lhs = lhsKind === \"assignment\" ? node : node.declarations[0].id;\n    var oldEnv = getRunningContext().LexicalEnvironment;\n    var V;\n    // When `destructuring` is false,\n    // For `node` whose `kind` is assignment:\n    //   `lhs` is an `Identifier` or a `MemberExpression`,\n    // Otherwise:\n    //   `lhs` is an `Identifier`.\n    var destructuring = lhs.type === \"ObjectPattern\" || lhs.type === \"ArrayPattern\";\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      var {\n        done,\n        value: nextValue\n      } = iteratorRecord.next();\n      if (done) {\n        return NormalCompletion(V);\n      }\n      var lhsRef = void 0;\n      var iterationEnv = void 0;\n      if (lhsKind === \"lexicalBinding\") {\n        iterationEnv = new DeclarativeEnvironment(oldEnv);\n        ForDeclarationBindingInstantiation(node, iterationEnv);\n        getRunningContext().LexicalEnvironment = iterationEnv;\n        if (!destructuring) {\n          var [lhsName] = collectBoundNames(lhs);\n          lhsRef = ResolveBinding(lhsName);\n        }\n      } else if (!destructuring) {\n        lhsRef = Evaluate(lhs).Value;\n      }\n      destructuring ? lhsKind === \"assignment\" ? DestructuringAssignmentEvaluation(lhs, nextValue) : lhsKind === \"varBinding\" ? BindingInitialization(lhs, nextValue, undefined) : BindingInitialization(lhs, nextValue, iterationEnv) : lhsKind === \"lexicalBinding\" ? InitializeReferencedBinding(lhsRef, nextValue) : PutValue(lhsRef, nextValue);\n      var result = Evaluate(stmt);\n      getRunningContext().LexicalEnvironment = oldEnv;\n      if (!LoopContinues(result)) {\n        var status = UpdateEmpty(result, V);\n        if (!(iterationKind === \"enumerate\" || iteratorRecord.return === undefined)) {\n          // Perform *IteratorClose*\n          // https://tc39.es/ecma262/#sec-iteratorclose\n          var innerResult = iteratorRecord.return();\n          if (!innerResult || ![\"object\", \"function\"].includes(typeof innerResult)) {\n            throw new TypeError(\"Iterator result is not an object\");\n          }\n        }\n        return status;\n      }\n      if (result.Value !== Empty) {\n        V = result.Value;\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-enumerate-object-properties\n  function* EnumerateObjectProperties(value) {\n    for (var _key in value) {\n      yield _key;\n    }\n  }\n\n  // For statements.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-forloopevaluation\n  function ForLoopEvaluation(node) {\n    var _node$init;\n    if (((_node$init = node.init) === null || _node$init === void 0 ? void 0 : _node$init.type) === \"VariableDeclaration\") {\n      // `for (var … ; … ; … ) …`\n      if (node.init.kind === \"var\") {\n        Evaluate(node.init);\n        return ForBodyEvaluation(node.test, node.update, node.body, []);\n      }\n      // `for (let/const … ; … ; … ) …`\n      var oldEnv = getRunningContext().LexicalEnvironment;\n      var loopEnv = new DeclarativeEnvironment(oldEnv);\n      var isConst = node.init.kind === \"const\";\n      var boundNames = collectBoundNames(node.init);\n      for (var dn of boundNames) {\n        if (isConst) {\n          loopEnv.CreateImmutableBinding(dn, true);\n        } else {\n          loopEnv.CreateMutableBinding(dn, false);\n        }\n      }\n      getRunningContext().LexicalEnvironment = loopEnv;\n      Evaluate(node.init);\n      var perIterationLets = isConst ? [] : Array.from(boundNames);\n      var bodyResult = ForBodyEvaluation(node.test, node.update, node.body, perIterationLets);\n      getRunningContext().LexicalEnvironment = oldEnv;\n      return bodyResult;\n    }\n    // `for ( … ; … ; … ) …`\n    if (node.init) {\n      var exprRef = Evaluate(node.init);\n      GetValue(exprRef);\n    }\n    return ForBodyEvaluation(node.test, node.update, node.body, []);\n  }\n\n  // https://tc39.es/ecma262/#sec-forbodyevaluation\n  function ForBodyEvaluation(test, increment, stmt, perIterationBindings) {\n    CreatePerIterationEnvironment(perIterationBindings);\n    var V;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (test) {\n        var testRef = Evaluate(test);\n        var testValue = GetValue(testRef);\n        if (!testValue) {\n          return NormalCompletion(V);\n        }\n      }\n      var result = Evaluate(stmt);\n      if (!LoopContinues(result)) {\n        return UpdateEmpty(result, V);\n      }\n      if (result.Value) {\n        V = result.Value;\n      }\n      CreatePerIterationEnvironment(perIterationBindings);\n      if (increment) {\n        var incRef = Evaluate(increment);\n        GetValue(incRef);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-createperiterationenvironment\n  function CreatePerIterationEnvironment(perIterationBindings) {\n    if (perIterationBindings.length === 0) {\n      return;\n    }\n    var lastIterationEnv = getRunningContext().LexicalEnvironment;\n    var outer = lastIterationEnv.OuterEnv;\n    var thisIterationEnv = new DeclarativeEnvironment(outer);\n    for (var bn of perIterationBindings) {\n      thisIterationEnv.CreateMutableBinding(bn, false);\n      var lastValue = lastIterationEnv.GetBindingValue(bn, false);\n      thisIterationEnv.InitializeBinding(bn, lastValue);\n    }\n    getRunningContext().LexicalEnvironment = thisIterationEnv;\n  }\n\n  // Destructuring assignments.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-destructuringassignmentevaluation\n  function DestructuringAssignmentEvaluation(pattern, value) {\n    if (pattern.type === \"ObjectPattern\") {\n      RequireObjectCoercible(value);\n      if (pattern.properties.length > 0) {\n        PropertyDestructuringAssignmentEvaluation(pattern.properties, value);\n      }\n      return NormalCompletion(Empty);\n    }\n    var iteratorRecord = CreateListIteratorRecord(value);\n    return IteratorDestructuringAssignmentEvaluation(pattern.elements, iteratorRecord);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-propertydestructuringassignmentevaluation\n  function PropertyDestructuringAssignmentEvaluation(properties, value) {\n    var excludedNames = new Set();\n    for (var prop of properties) {\n      if (prop.type === \"Property\") {\n        var propName = !prop.computed && prop.key.type === \"Identifier\" ? prop.key.name : EvaluateComputedPropertyName(prop.key);\n        var valueTarget = prop.value.type === \"AssignmentPattern\" ? prop.value.left : prop.value;\n        if (valueTarget.type === \"Identifier\") {\n          var lref = ResolveBinding(valueTarget.name);\n          var v = GetV(value, propName);\n          if (prop.value.type === \"AssignmentPattern\" && v === undefined) {\n            // Todo(steve): check IsAnonymousFunctionDefinition(Initializer)\n            var defaultValue = Evaluate(prop.value.right);\n            v = GetValue(defaultValue);\n          }\n          PutValue(lref, v);\n          excludedNames.add(propName);\n        } else {\n          KeyedDestructuringAssignmentEvaluation(prop.value, value, propName);\n          excludedNames.add(propName);\n        }\n      } else {\n        RestDestructuringAssignmentEvaluation(prop, value, excludedNames);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-keyeddestructuringassignmentevaluation\n  function KeyedDestructuringAssignmentEvaluation(node, value, propertyName) {\n    var assignmentTarget = node.type === \"AssignmentPattern\" ? node.left : node;\n    var isObjectOrArray = assignmentTarget.type === \"ArrayPattern\" || assignmentTarget.type === \"ObjectPattern\";\n    var lref;\n    if (!isObjectOrArray) {\n      lref = Evaluate(assignmentTarget).Value;\n    }\n    var v = GetV(value, propertyName);\n    var rhsValue;\n    if (node.type === \"AssignmentPattern\" && v === undefined) {\n      // Todo(steve): check IsAnonymousFunctionDefinition(Initializer)\n      var defaultValue = Evaluate(node.right);\n      rhsValue = GetValue(defaultValue);\n    } else {\n      rhsValue = v;\n    }\n    if (isObjectOrArray) {\n      return DestructuringAssignmentEvaluation(assignmentTarget, rhsValue);\n    }\n    return PutValue(lref, rhsValue);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-restdestructuringassignmentevaluation\n  function RestDestructuringAssignmentEvaluation(restProperty, value, excludedNames) {\n    var lref = Evaluate(restProperty.argument).Value;\n    var restObj = CopyDataProperties({}, value, excludedNames);\n    return PutValue(lref, restObj);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-iteratordestructuringassignmentevaluation\n  function IteratorDestructuringAssignmentEvaluation(elements, iteratorRecord) {\n    var status = NormalCompletion(Empty);\n    for (var element of elements) {\n      if (!element) {\n        iteratorRecord.next();\n        status = NormalCompletion(Empty);\n        continue;\n      }\n      var assignmentTarget = element.type === \"RestElement\" ? element.argument : element.type === \"AssignmentPattern\" ? element.left : element;\n      var isObjectOrArray = assignmentTarget.type === \"ArrayPattern\" || assignmentTarget.type === \"ObjectPattern\";\n      var lref = void 0;\n      if (!isObjectOrArray) {\n        lref = Evaluate(assignmentTarget).Value;\n      }\n      var v = void 0;\n      if (element.type !== \"RestElement\") {\n        var {\n          done,\n          value: nextValue\n        } = iteratorRecord.next();\n        var _value2 = done ? undefined : nextValue;\n        if (element.type === \"AssignmentPattern\" && _value2 === undefined) {\n          // Todo(steve): check IsAnonymousFunctionDefinition(Initializer)\n          var defaultValue = Evaluate(element.right);\n          v = GetValue(defaultValue);\n        } else {\n          v = _value2;\n        }\n      } else {\n        // RestElement\n        v = [];\n        var n = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          var {\n            done: _done,\n            value: _nextValue\n          } = iteratorRecord.next();\n          if (_done) {\n            break;\n          }\n          v[n] = _nextValue;\n          n++;\n        }\n      }\n      if (isObjectOrArray) {\n        status = DestructuringAssignmentEvaluation(assignmentTarget, v);\n      } else {\n        status = PutValue(lref, v);\n      }\n    }\n    return status;\n  }\n\n  // Object expressions.\n  // https://tc39.es/ecma262/#sec-evaluate-property-access-with-expression-key\n  function EvaluatePropertyAccessWithExpressionKey(baseValue, expression, strict) {\n    var propertyNameReference = Evaluate(expression);\n    var propertyNameValue = GetValue(propertyNameReference);\n    var propertyKey = ToPropertyKey(propertyNameValue);\n    return new ReferenceRecord(baseValue, propertyKey, strict);\n  }\n\n  // https://tc39.es/ecma262/#sec-evaluate-property-access-with-identifier-key\n  function EvaluatePropertyAccessWithIdentifierKey(baseValue, identifier, strict) {\n    var propertyNameString = identifier.name;\n    return new ReferenceRecord(baseValue, propertyNameString, strict);\n  }\n\n  // Block statements.\n  // https://tc39.es/ecma262/#sec-blockdeclarationinstantiation\n  function BlockDeclarationInstantiation(code, env) {\n    var declarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: false\n    });\n    for (var d of declarations) {\n      var IsConstantDeclaration = d.type === \"VariableDeclaration\" && d.kind === \"const\";\n      for (var dn of collectBoundNames(d)) {\n        if (IsConstantDeclaration) {\n          env.CreateImmutableBinding(dn, true);\n        } else {\n          env.CreateMutableBinding(dn, false);\n        }\n      }\n      if (d.type === \"FunctionDeclaration\") {\n        var [_fn] = collectBoundNames(d);\n        var _fo = InstantiateFunctionObject(d, env);\n        env.InitializeBinding(_fn, _fo);\n      }\n    }\n  }\n\n  // Function declarations and expressions.\n  // https://tc39.es/ecma262/#sec-evaluatecall\n  function EvaluateCall(func, ref, args, callee) {\n    var thisValue;\n    if (ref instanceof ReferenceRecord) {\n      if (IsPropertyReference(ref)) {\n        thisValue = ref.Base;\n      }\n    }\n    var argList = ArgumentListEvaluation(args);\n    if (typeof func !== \"function\") {\n      var funcName = codeSource.substring(callee.start, callee.end);\n      throw new TypeError(\"\".concat(funcName, \" is not a function\"));\n    }\n    var result = func.apply(thisValue, argList);\n    sanitize(result);\n    return NormalCompletion(result);\n  }\n\n  // https://tc39.es/ecma262/#sec-evaluatenew\n  function EvaluateNew(constructExpr, args) {\n    var ref = Evaluate(constructExpr);\n    var constructor = GetValue(ref);\n    var argList = ArgumentListEvaluation(args);\n    if (typeof constructor !== \"function\" || constructor[IsConstructor] === false) {\n      var constructorName = codeSource.substring(constructExpr.start, constructExpr.end);\n      throw new TypeError(\"\".concat(constructorName, \" is not a constructor\"));\n    }\n    if (!isAllowedConstructor(constructor)) {\n      var _constructorName = codeSource.substring(constructExpr.start, constructExpr.end);\n      throw new TypeError(\"\".concat(_constructorName, \" is not an allowed constructor\"));\n    }\n    return NormalCompletion(new constructor(...argList));\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-argumentlistevaluation\n  function ArgumentListEvaluation(args) {\n    var array = [];\n    if (Array.isArray(args)) {\n      for (var arg of args) {\n        if (arg.type === \"SpreadElement\") {\n          var spreadValues = GetValue(Evaluate(arg.argument));\n          array.push(...spreadValues);\n        } else {\n          array.push(GetValue(Evaluate(arg)));\n        }\n      }\n    } else {\n      array.push(GetTemplateObject(args));\n      for (var expr of args.expressions) {\n        array.push(GetValue(Evaluate(expr)));\n      }\n    }\n    return array;\n  }\n\n  // https://tc39.es/ecma262/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n  function CallFunction(closure, args) {\n    var _hooks$beforeCall;\n    (_hooks$beforeCall = hooks.beforeCall) === null || _hooks$beforeCall === void 0 ? void 0 : _hooks$beforeCall.call(hooks, closure[SourceNode]);\n    PrepareForOrdinaryCall(closure);\n    var result = OrdinaryCallEvaluateBody(closure, args);\n    executionContextStack.pop();\n    if (result.Type === \"return\") {\n      return result.Value;\n    }\n    return undefined;\n  }\n\n  // https://tc39.es/ecma262/#sec-prepareforordinarycall\n  function PrepareForOrdinaryCall(F) {\n    var calleeContext = new ExecutionContext();\n    calleeContext.Function = F;\n    var localEnv = new FunctionEnvironment(F[Environment]);\n    calleeContext.VariableEnvironment = localEnv;\n    calleeContext.LexicalEnvironment = localEnv;\n    executionContextStack.push(calleeContext);\n    return calleeContext;\n  }\n\n  // https://tc39.es/ecma262/#sec-ordinarycallevaluatebody\n  function OrdinaryCallEvaluateBody(F, args) {\n    return EvaluateFunctionBody(F[ECMAScriptCode], F, args);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-evaluatefunctionbody\n  function EvaluateFunctionBody(body, F, args) {\n    FunctionDeclarationInstantiation(F, args);\n    if (Array.isArray(body)) {\n      return EvaluateStatementList(body);\n    }\n    return new CompletionRecord(\"return\", GetValue(Evaluate(body)));\n  }\n\n  // https://tc39.es/ecma262/#sec-block-runtime-semantics-evaluation\n  function EvaluateStatementList(statements) {\n    var result = NormalCompletion(Empty);\n    for (var stmt of statements) {\n      var s = Evaluate(stmt);\n      if (s.Type !== \"normal\") {\n        return s;\n      }\n      result = UpdateEmpty(result, s.Value);\n    }\n    return result;\n  }\n\n  // https://tc39.es/ecma262/#sec-functiondeclarationinstantiation\n  function FunctionDeclarationInstantiation(func, args) {\n    var calleeContext = getRunningContext();\n    var code = func[ECMAScriptCode];\n    var formals = func[FormalParameters];\n    var parameterNames = collectBoundNames(formals);\n    var hasParameterExpressions = containsExpression(formals);\n    var varDeclarations = collectScopedDeclarations(code, {\n      var: true,\n      topLevel: true\n    });\n    var varNames = collectBoundNames(varDeclarations);\n\n    // `functionNames` ∈ `varNames`\n    // `functionsToInitialize` ≈ `functionNames`\n    var functionNames = [];\n    var functionsToInitialize = [];\n    for (var i = varDeclarations.length - 1; i >= 0; i--) {\n      var d = varDeclarations[i];\n      if (d.type === \"FunctionDeclaration\") {\n        ThrowIfFunctionIsInvalid(d);\n        var [_fn2] = collectBoundNames(d);\n        if (!functionNames.includes(_fn2)) {\n          functionNames.unshift(_fn2);\n          functionsToInitialize.unshift(d);\n        }\n      } else if (rules !== null && rules !== void 0 && rules.noVar) {\n        throw new SyntaxError(\"Var declaration is not recommended, use `let` or `const` instead\");\n      }\n    }\n    var env = calleeContext.LexicalEnvironment;\n    for (var paramName of parameterNames) {\n      // In strict mode, it's guaranteed no duplicate params exist.\n      env.CreateMutableBinding(paramName, false);\n    }\n    var iteratorRecord = CreateListIteratorRecord(args);\n    IteratorBindingInitialization(formals, iteratorRecord, env);\n    var varEnv;\n    if (!hasParameterExpressions) {\n      // NOTE: Only a single Environment Record is needed for the parameters\n      // and top-level vars.\n      // `varNames` are unique.\n      for (var n of varNames) {\n        if (!parameterNames.includes(n)) {\n          env.CreateMutableBinding(n, false);\n          env.InitializeBinding(n, undefined);\n        }\n      }\n      varEnv = env;\n    } else {\n      // NOTE: A separate Environment Record is needed to ensure that closures\n      // created by expressions in the formal parameter list do not have\n      // visibility of declarations in the function body.\n      varEnv = new DeclarativeEnvironment(env);\n      calleeContext.VariableEnvironment = varEnv;\n      // `varNames` are unique.\n      for (var _n of varNames) {\n        varEnv.CreateMutableBinding(_n, false);\n        var initialValue = void 0;\n        if (parameterNames.includes(_n) && !functionNames.includes(_n)) {\n          initialValue = env.GetBindingValue(_n, false);\n        }\n        varEnv.InitializeBinding(_n, initialValue);\n        // NOTE: A var with the same name as a formal parameter initially has\n        // the same value as the corresponding initialized parameter.\n      }\n    }\n\n    var lexEnv = varEnv;\n    calleeContext.LexicalEnvironment = lexEnv;\n    var lexDeclarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: true\n    });\n    for (var _d of lexDeclarations) {\n      for (var dn of collectBoundNames(_d)) {\n        // Only lexical VariableDeclaration here in top-level.\n        if (_d.kind === \"const\") {\n          lexEnv.CreateImmutableBinding(dn, true);\n        } else {\n          lexEnv.CreateMutableBinding(dn, false);\n        }\n      }\n    }\n    for (var f of functionsToInitialize) {\n      var [_fn3] = collectBoundNames(f);\n      var _fo2 = InstantiateFunctionObject(f, lexEnv);\n      varEnv.SetMutableBinding(_fn3, _fo2, false);\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-instantiatefunctionobject\n  function InstantiateFunctionObject(func, scope) {\n    return OrdinaryFunctionCreate(func, scope, true);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-instantiateordinaryfunctionexpression\n  function InstantiateOrdinaryFunctionExpression(functionExpression) {\n    var scope = getRunningContext().LexicalEnvironment;\n    if (functionExpression.id) {\n      var name = functionExpression.id.name;\n      var funcEnv = new DeclarativeEnvironment(scope);\n      funcEnv.CreateImmutableBinding(name, false);\n      var closure = OrdinaryFunctionCreate(functionExpression, funcEnv, true);\n      funcEnv.InitializeBinding(name, closure);\n      return closure;\n    } else {\n      var _closure = OrdinaryFunctionCreate(functionExpression, scope, true);\n      return _closure;\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-instantiatearrowfunctionexpression\n  function InstantiateArrowFunctionExpression(arrowFunction) {\n    var scope = getRunningContext().LexicalEnvironment;\n    var closure = OrdinaryFunctionCreate(arrowFunction, scope, false);\n    return closure;\n  }\n\n  // https://tc39.es/ecma262/#sec-ordinaryfunctioncreate\n  function OrdinaryFunctionCreate(sourceNode, scope, isConstructor) {\n    var F = function () {\n      // eslint-disable-next-line prefer-rest-params\n      return CallFunction(F, arguments);\n    };\n    Object.defineProperties(F, {\n      [SourceNode]: {\n        value: sourceNode\n      },\n      [FormalParameters]: {\n        value: sourceNode.params\n      },\n      [ECMAScriptCode]: {\n        value: sourceNode.body.type === \"BlockStatement\" ? sourceNode.body.body : sourceNode.body\n      },\n      [Environment]: {\n        value: scope\n      },\n      [IsConstructor]: {\n        value: isConstructor\n      }\n    });\n    return F;\n  }\n\n  // Patterns initialization.\n  // https://tc39.es/ecma262/#sec-runtime-semantics-bindinginitialization\n  function BindingInitialization(node, value, environment) {\n    switch (node.type) {\n      case \"Identifier\":\n        return InitializeBoundName(node.name, value, environment);\n      case \"ObjectPattern\":\n        RequireObjectCoercible(value);\n        return PropertyBindingInitialization(node.properties, value, environment);\n      case \"ArrayPattern\":\n        {\n          var iteratorRecord = CreateListIteratorRecord(value);\n          return IteratorBindingInitialization(node.elements, iteratorRecord, environment);\n        }\n    }\n  }\n\n  // https://tc39.es/ecma262/#sec-destructuring-binding-patterns-runtime-semantics-propertybindinginitialization\n  function PropertyBindingInitialization(properties, value, environment) {\n    var excludedNames = new Set();\n    for (var prop of properties) {\n      if (prop.type === \"RestElement\") {\n        return RestBindingInitialization(prop, value, environment, excludedNames);\n      }\n      if (!prop.computed && prop.key.type === \"Identifier\") {\n        KeyedBindingInitialization(prop.value, value, environment, prop.key.name);\n        excludedNames.add(prop.key.name);\n      } else {\n        var P = EvaluateComputedPropertyName(prop.key);\n        KeyedBindingInitialization(prop.value, value, environment, P);\n        excludedNames.add(P);\n      }\n    }\n    return NormalCompletion(Empty);\n  }\n\n  // https://tc39.es/ecma262/#prod-ComputedPropertyName\n  function EvaluateComputedPropertyName(node) {\n    var propName = GetValue(Evaluate(node));\n    return ToPropertyKey(propName);\n  }\n\n  // https://tc39.es/ecma262/#sec-destructuring-binding-patterns-runtime-semantics-restbindinginitialization\n  function RestBindingInitialization(restProperty, value, environment, excludedNames) {\n    var lhs = ResolveBinding(restProperty.argument.name, environment);\n    var restObj = CopyDataProperties({}, value, excludedNames);\n    if (!environment) {\n      return PutValue(lhs, restObj);\n    }\n    return InitializeReferencedBinding(lhs, restObj);\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-iteratorbindinginitialization\n  function IteratorBindingInitialization(elements, iteratorRecord, environment) {\n    if (elements.length === 0) {\n      return NormalCompletion(Empty);\n    }\n    var result;\n    for (var _node of elements) {\n      if (!_node) {\n        // Elision element.\n        iteratorRecord.next();\n        result = NormalCompletion(Empty);\n      } else if (_node.type === \"RestElement\") {\n        // Rest element.\n        if (_node.argument.type === \"Identifier\") {\n          var lhs = ResolveBinding(_node.argument.name, environment);\n          var A = [];\n          var n = 0;\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            var {\n              done,\n              value: _value3\n            } = iteratorRecord.next();\n            if (done) {\n              result = environment ? InitializeReferencedBinding(lhs, A) : PutValue(lhs, A);\n              break;\n            }\n            A[n] = _value3;\n            n++;\n          }\n        } else {\n          var _A = [];\n          var _n2 = 0;\n          // eslint-disable-next-line no-constant-condition\n          while (true) {\n            var {\n              done: _done2,\n              value: _value4\n            } = iteratorRecord.next();\n            if (_done2) {\n              result = BindingInitialization(_node.argument, _A, environment);\n              break;\n            }\n            _A[_n2] = _value4;\n            _n2++;\n          }\n        }\n      } else {\n        // Normal element.\n        var bindingElement = _node.type === \"AssignmentPattern\" ? _node.left : _node;\n        switch (bindingElement.type) {\n          case \"ObjectPattern\":\n          case \"ArrayPattern\":\n            {\n              var v = void 0;\n              var {\n                done: _done3,\n                value: _value5\n              } = iteratorRecord.next();\n              if (!_done3) {\n                v = _value5;\n              }\n              if (_node.type === \"AssignmentPattern\" && v === undefined) {\n                var defaultValue = Evaluate(_node.right);\n                v = GetValue(defaultValue);\n              }\n              result = BindingInitialization(bindingElement, v, environment);\n              break;\n            }\n          case \"Identifier\":\n            {\n              var bindingId = bindingElement.name;\n              var _lhs3 = ResolveBinding(bindingId, environment);\n              var _v = void 0;\n              var {\n                done: _done4,\n                value: _value6\n              } = iteratorRecord.next();\n              if (!_done4) {\n                _v = _value6;\n              }\n              if (_node.type === \"AssignmentPattern\" && _v === undefined) {\n                // IsAnonymousFunctionDefinition(Initializer)\n                var _defaultValue = Evaluate(_node.right);\n                _v = GetValue(_defaultValue);\n              }\n              result = environment ? InitializeReferencedBinding(_lhs3, _v) : PutValue(_lhs3, _v);\n              break;\n            }\n        }\n      }\n    }\n    return result;\n  }\n\n  // https://tc39.es/ecma262/#sec-runtime-semantics-keyedbindinginitialization\n  function KeyedBindingInitialization(node, value, environment, propertyName) {\n    var isIdentifier = node.type === \"Identifier\" || node.type === \"AssignmentPattern\" && node.left.type === \"Identifier\";\n    if (isIdentifier) {\n      var bindingId = node.type === \"Identifier\" ? node.name : node.left.name;\n      var lhs = ResolveBinding(bindingId, environment);\n      var _v2 = GetV(value, propertyName);\n      if (node.type === \"AssignmentPattern\" && _v2 === undefined) {\n        // If IsAnonymousFunctionDefinition(Initializer)\n        var defaultValue = Evaluate(node.right);\n        _v2 = GetValue(defaultValue);\n      }\n      if (!environment) {\n        return PutValue(lhs, _v2);\n      }\n      return InitializeReferencedBinding(lhs, _v2);\n    }\n    var v = GetV(value, propertyName);\n    if (node.type === \"AssignmentPattern\" && v === undefined) {\n      var _defaultValue2 = Evaluate(node.right);\n      v = GetValue(_defaultValue2);\n    }\n    return BindingInitialization(node.type === \"AssignmentPattern\" ? node.left : node, v, environment);\n  }\n\n  // https://tc39.es/ecma262/#sec-initializeboundname\n  function InitializeBoundName(name, value, environment) {\n    // Assert: environment is always present.\n    environment.InitializeBinding(name, value);\n    return NormalCompletion(Empty);\n  }\n  function ThrowIfFunctionIsInvalid(func) {\n    if (func.async || func.generator) {\n      throw new SyntaxError(\"\".concat(func.async ? \"Async\" : \"Generator\", \" function is not allowed\"));\n    }\n    if (expressionOnly && !func.expression) {\n      throw new SyntaxError(\"Only an `Expression` is allowed in `ArrowFunctionExpression`'s body\");\n    }\n  }\n  if (expressionOnly) {\n    return GetValue(Evaluate(rootAst));\n  }\n  (_hooks$beforeEvaluate3 = hooks.beforeEvaluate) === null || _hooks$beforeEvaluate3 === void 0 ? void 0 : _hooks$beforeEvaluate3.call(hooks, rootAst);\n  ThrowIfFunctionIsInvalid(rootAst);\n  var [fn] = collectBoundNames(rootAst);\n  // Create an immutable binding for the root function.\n  rootEnv.CreateImmutableBinding(fn, true);\n  var fo = InstantiateFunctionObject(rootAst, rootEnv);\n  rootEnv.InitializeBinding(fn, fo);\n  return fo;\n}\n//# sourceMappingURL=cook.js.map","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n// https://tc39.es/ecma262/#sec-execution-contexts\nexport class AnalysisContext {\n  constructor() {\n    _defineProperty(this, \"VariableEnvironment\", void 0);\n    _defineProperty(this, \"LexicalEnvironment\", void 0);\n  }\n}\n\n// https://tc39.es/ecma262/#sec-environment-records\nexport class AnalysisEnvironment {\n  constructor(outer) {\n    _defineProperty(this, \"OuterEnv\", void 0);\n    _defineProperty(this, \"bindingSet\", new Set());\n    this.OuterEnv = outer;\n  }\n  HasBinding(name) {\n    return this.bindingSet.has(name);\n  }\n  CreateBinding(name) {\n    this.bindingSet.add(name);\n  }\n}\n//# sourceMappingURL=AnalysisContext.js.map","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { hasOwnProperty } from \"./hasOwnProperty.js\";\nimport { AnalysisContext, AnalysisEnvironment } from \"./AnalysisContext.js\";\nimport { collectBoundNames, collectScopedDeclarations, containsExpression } from \"./traverse.js\";\n/**\n * Analysis an AST of a storyboard function or an evaluation expression.\n *\n * @param rootAst - The root AST.\n * @param options - Analysis options.\n * @returns A set of global variables the root AST attempts to access.\n */\nexport function precook(rootAst) {\n  var {\n    expressionOnly,\n    visitors,\n    withParent,\n    hooks = {}\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attemptToVisitGlobals = new Set();\n  var analysisContextStack = [];\n  var rootEnv = new AnalysisEnvironment(null);\n  var rootContext = new AnalysisContext();\n  rootContext.VariableEnvironment = rootEnv;\n  rootContext.LexicalEnvironment = rootEnv;\n  analysisContextStack.push(rootContext);\n  function getRunningContext() {\n    return analysisContextStack[analysisContextStack.length - 1];\n  }\n  function visit(node) {\n    if (visitors && hasOwnProperty(visitors, node.type)) {\n      visitors[node.type](node);\n    }\n  }\n  function EvaluateChildren(node, keys, parent) {\n    for (var key of keys) {\n      Evaluate(node[key], parent === null || parent === void 0 ? void 0 : parent.concat({\n        node,\n        key\n      }));\n    }\n  }\n  function Evaluate(node, parent) {\n    if (Array.isArray(node)) {\n      node.forEach((n, index) => {\n        Evaluate(n, parent ? parent.slice(0, -1).concat(_objectSpread(_objectSpread({}, parent[parent.length - 1]), {}, {\n          index\n        })) : parent);\n      });\n    } else if (node) {\n      var _hooks$beforeVisit, _hooks$beforeVisitUnk;\n      // `node` maybe `null` in some cases.\n      (_hooks$beforeVisit = hooks.beforeVisit) === null || _hooks$beforeVisit === void 0 ? void 0 : _hooks$beforeVisit.call(hooks, node, parent);\n      visit(node);\n      // Expressions:\n      switch (node.type) {\n        case \"Identifier\":\n          if (!ResolveBinding(node.name)) {\n            var _hooks$beforeVisitGlo;\n            (_hooks$beforeVisitGlo = hooks.beforeVisitGlobal) === null || _hooks$beforeVisitGlo === void 0 ? void 0 : _hooks$beforeVisitGlo.call(hooks, node, parent);\n            attemptToVisitGlobals.add(node.name);\n          }\n          return;\n        case \"ArrayExpression\":\n        case \"ArrayPattern\":\n          EvaluateChildren(node, [\"elements\"], parent);\n          return;\n        case \"ArrowFunctionExpression\":\n          {\n            var env = getRunningContext().LexicalEnvironment;\n            var closure = OrdinaryFunctionCreate(node, env);\n            CallFunction(closure, parent);\n            return;\n          }\n        case \"AssignmentPattern\":\n        case \"BinaryExpression\":\n        case \"LogicalExpression\":\n          EvaluateChildren(node, [\"left\", \"right\"], parent);\n          return;\n        case \"CallExpression\":\n        case \"NewExpression\":\n          EvaluateChildren(node, [\"callee\", \"arguments\"], parent);\n          return;\n        case \"ChainExpression\":\n          EvaluateChildren(node, [\"expression\"], parent);\n          return;\n        case \"ConditionalExpression\":\n          EvaluateChildren(node, [\"test\", \"consequent\", \"alternate\"], parent);\n          return;\n        case \"MemberExpression\":\n          EvaluateChildren(node, [\"object\"], parent);\n          if (node.computed) {\n            EvaluateChildren(node, [\"property\"], parent);\n          }\n          return;\n        case \"ObjectExpression\":\n        case \"ObjectPattern\":\n          EvaluateChildren(node, [\"properties\"], parent);\n          return;\n        case \"Property\":\n          if (node.computed) {\n            EvaluateChildren(node, [\"key\"], parent);\n          }\n          EvaluateChildren(node, [\"value\"], parent);\n          return;\n        case \"RestElement\":\n        case \"SpreadElement\":\n        case \"UnaryExpression\":\n          EvaluateChildren(node, [\"argument\"], parent);\n          return;\n        case \"SequenceExpression\":\n        case \"TemplateLiteral\":\n          EvaluateChildren(node, [\"expressions\"], parent);\n          return;\n        case \"TaggedTemplateExpression\":\n          EvaluateChildren(node, [\"tag\", \"quasi\"], parent);\n          return;\n        case \"Literal\":\n          return;\n      }\n      if (!expressionOnly) {\n        // Statements and assignments:\n        switch (node.type) {\n          case \"AssignmentExpression\":\n            EvaluateChildren(node, [\"right\", \"left\"], parent);\n            return;\n          case \"BlockStatement\":\n            {\n              if (!node.body.length) {\n                return;\n              }\n              var runningContext = getRunningContext();\n              var oldEnv = runningContext.LexicalEnvironment;\n              var blockEnv = new AnalysisEnvironment(oldEnv);\n              BlockDeclarationInstantiation(node.body, blockEnv);\n              runningContext.LexicalEnvironment = blockEnv;\n              EvaluateChildren(node, [\"body\"], parent);\n              runningContext.LexicalEnvironment = oldEnv;\n              return;\n            }\n          case \"BreakStatement\":\n          case \"ContinueStatement\":\n          case \"EmptyStatement\":\n            return;\n          case \"CatchClause\":\n            {\n              var _runningContext = getRunningContext();\n              var _oldEnv = _runningContext.LexicalEnvironment;\n              var catchEnv = new AnalysisEnvironment(_oldEnv);\n              BoundNamesInstantiation(node.param, catchEnv);\n              _runningContext.LexicalEnvironment = catchEnv;\n              EvaluateChildren(node, [\"param\", \"body\"], parent);\n              _runningContext.LexicalEnvironment = _oldEnv;\n              return;\n            }\n          case \"DoWhileStatement\":\n            EvaluateChildren(node, [\"body\", \"test\"], parent);\n            return;\n          case \"ExpressionStatement\":\n          case \"TSAsExpression\":\n            EvaluateChildren(node, [\"expression\"], parent);\n            return;\n          case \"ForInStatement\":\n          case \"ForOfStatement\":\n            {\n              // ForIn/OfHeadEvaluation\n              var lexicalBinding = node.left.type === \"VariableDeclaration\" && node.left.kind !== \"var\";\n              var _runningContext2 = getRunningContext();\n              var _oldEnv2 = _runningContext2.LexicalEnvironment;\n              if (lexicalBinding) {\n                var newEnv = new AnalysisEnvironment(_oldEnv2);\n                BoundNamesInstantiation(node.left, newEnv);\n                _runningContext2.LexicalEnvironment = newEnv;\n              }\n              EvaluateChildren(node, [\"right\"], parent);\n              _runningContext2.LexicalEnvironment = _oldEnv2;\n\n              // ForIn/OfBodyEvaluation\n              if (lexicalBinding) {\n                var iterationEnv = new AnalysisEnvironment(_oldEnv2);\n                BoundNamesInstantiation(node.left, iterationEnv);\n                _runningContext2.LexicalEnvironment = iterationEnv;\n              }\n              EvaluateChildren(node, [\"left\", \"body\"], parent);\n              _runningContext2.LexicalEnvironment = _oldEnv2;\n              return;\n            }\n          case \"ForStatement\":\n            {\n              var _node$init;\n              var _lexicalBinding = ((_node$init = node.init) === null || _node$init === void 0 ? void 0 : _node$init.type) === \"VariableDeclaration\" && node.init.kind !== \"var\";\n              var _runningContext3 = getRunningContext();\n              var _oldEnv3 = _runningContext3.LexicalEnvironment;\n              if (_lexicalBinding) {\n                var loopEnv = new AnalysisEnvironment(_oldEnv3);\n                BoundNamesInstantiation(node.init, loopEnv);\n                _runningContext3.LexicalEnvironment = loopEnv;\n              }\n              EvaluateChildren(node, [\"init\", \"test\", \"body\", \"update\"], parent);\n              _runningContext3.LexicalEnvironment = _oldEnv3;\n              return;\n            }\n          case \"FunctionDeclaration\":\n            {\n              var [fn] = collectBoundNames(node);\n              var _env = getRunningContext().LexicalEnvironment;\n              var fo = OrdinaryFunctionCreate(node, _env);\n              _env.CreateBinding(fn);\n              CallFunction(fo, parent);\n              return;\n            }\n          case \"FunctionExpression\":\n            {\n              var _closure = InstantiateOrdinaryFunctionExpression(node);\n              CallFunction(_closure, parent);\n              return;\n            }\n          case \"IfStatement\":\n            EvaluateChildren(node, [\"test\", \"consequent\", \"alternate\"], parent);\n            return;\n          case \"ReturnStatement\":\n          case \"ThrowStatement\":\n          case \"UpdateExpression\":\n            EvaluateChildren(node, [\"argument\"], parent);\n            return;\n          case \"SwitchCase\":\n            EvaluateChildren(node, [\"test\", \"consequent\"], parent);\n            return;\n          case \"SwitchStatement\":\n            {\n              EvaluateChildren(node, [\"discriminant\"], parent);\n              var _runningContext4 = getRunningContext();\n              var _oldEnv4 = _runningContext4.LexicalEnvironment;\n              var _blockEnv = new AnalysisEnvironment(_oldEnv4);\n              BlockDeclarationInstantiation(node.cases, _blockEnv);\n              _runningContext4.LexicalEnvironment = _blockEnv;\n              EvaluateChildren(node, [\"cases\"], parent);\n              _runningContext4.LexicalEnvironment = _oldEnv4;\n              return;\n            }\n          case \"TryStatement\":\n            EvaluateChildren(node, [\"block\", \"handler\", \"finalizer\"], parent);\n            return;\n          case \"VariableDeclaration\":\n            EvaluateChildren(node, [\"declarations\"], parent);\n            return;\n          case \"VariableDeclarator\":\n            EvaluateChildren(node, [\"id\", \"init\"], parent);\n            return;\n          case \"WhileStatement\":\n            EvaluateChildren(node, [\"test\", \"body\"], parent);\n            return;\n        }\n      }\n      var silent = (_hooks$beforeVisitUnk = hooks.beforeVisitUnknown) === null || _hooks$beforeVisitUnk === void 0 ? void 0 : _hooks$beforeVisitUnk.call(hooks, node, parent);\n      if (!silent) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Unsupported node type `\".concat(node.type, \"`\"));\n      }\n    }\n  }\n  function BoundNamesInstantiation(declarations, env) {\n    for (var name of collectBoundNames(declarations)) {\n      env.CreateBinding(name);\n    }\n  }\n  function ResolveBinding(name) {\n    var env = getRunningContext().LexicalEnvironment;\n    return GetIdentifierReference(env, name);\n  }\n  function GetIdentifierReference(env, name) {\n    return !!env && (env.HasBinding(name) || GetIdentifierReference(env.OuterEnv, name));\n  }\n  function BlockDeclarationInstantiation(code, env) {\n    var declarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: false\n    });\n    BoundNamesInstantiation(declarations, env);\n  }\n  function CallFunction(closure, parent) {\n    PrepareOrdinaryCall(closure);\n    FunctionDeclarationInstantiation(closure, parent);\n    Evaluate(closure.ECMAScriptCode, parent === null || parent === void 0 ? void 0 : parent.concat({\n      node: closure.Function,\n      key: \"body\"\n    }).concat(closure.Function.body.type === \"BlockStatement\" ? {\n      node: closure.Function.body,\n      key: \"body\"\n    } : []));\n    analysisContextStack.pop();\n  }\n  function PrepareOrdinaryCall(F) {\n    var calleeContext = new AnalysisContext();\n    var localEnv = new AnalysisEnvironment(F.Environment);\n    calleeContext.VariableEnvironment = localEnv;\n    calleeContext.LexicalEnvironment = localEnv;\n    analysisContextStack.push(calleeContext);\n  }\n  function FunctionDeclarationInstantiation(func, parent) {\n    var calleeContext = getRunningContext();\n    var code = func.ECMAScriptCode;\n    var formals = func.FormalParameters;\n    var hasParameterExpressions = containsExpression(formals);\n    var varDeclarations = collectScopedDeclarations(code, {\n      var: true,\n      topLevel: true\n    });\n    var varNames = collectBoundNames(varDeclarations);\n    var env = calleeContext.LexicalEnvironment;\n    BoundNamesInstantiation(formals, env);\n    Evaluate(formals, parent === null || parent === void 0 ? void 0 : parent.concat({\n      node: func.Function,\n      key: \"params\"\n    }));\n    var varEnv;\n    if (!hasParameterExpressions) {\n      // NOTE: Only a single Environment Record is needed for the parameters\n      // and top-level vars.\n      for (var n of varNames) {\n        env.CreateBinding(n);\n      }\n      varEnv = env;\n    } else {\n      // NOTE: A separate Environment Record is needed to ensure that closures\n      // created by expressions in the formal parameter list do not have\n      // visibility of declarations in the function body.\n      varEnv = new AnalysisEnvironment(env);\n      calleeContext.VariableEnvironment = varEnv;\n      for (var _n of varNames) {\n        varEnv.CreateBinding(_n);\n      }\n    }\n    var lexEnv = varEnv;\n    calleeContext.LexicalEnvironment = lexEnv;\n    var lexDeclarations = collectScopedDeclarations(code, {\n      var: false,\n      topLevel: true\n    });\n    BoundNamesInstantiation(lexDeclarations, lexEnv);\n  }\n  function InstantiateOrdinaryFunctionExpression(functionExpression) {\n    var scope = getRunningContext().LexicalEnvironment;\n    if (!functionExpression.id) {\n      return OrdinaryFunctionCreate(functionExpression, scope);\n    }\n    var name = functionExpression.id.name;\n    var funcEnv = new AnalysisEnvironment(scope);\n    funcEnv.CreateBinding(name);\n    return OrdinaryFunctionCreate(functionExpression, funcEnv);\n  }\n  function OrdinaryFunctionCreate(func, scope) {\n    return {\n      Function: func,\n      FormalParameters: func.params,\n      ECMAScriptCode: func.body.type === \"BlockStatement\" ? func.body.body : func.body,\n      Environment: scope\n    };\n  }\n  Evaluate(rootAst, withParent ? [] : undefined);\n  return attemptToVisitGlobals;\n}\n//# sourceMappingURL=precook.js.map","export function hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n//# sourceMappingURL=hasOwnProperty.js.map","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"typescript\"];\nimport { parseAsEstree } from \"./parse.js\";\nimport { precook } from \"./precook.js\";\nexport function precookFunction(source) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    {\n      typescript\n    } = _ref,\n    restOptions = _objectWithoutProperties(_ref, _excluded);\n  var func = parseAsEstree(source, {\n    typescript\n  });\n  var attemptToVisitGlobals = precook(func, restOptions);\n  return {\n    function: func,\n    attemptToVisitGlobals\n  };\n}\n//# sourceMappingURL=precookFunction.js.map","import { parse, parseExpression } from \"@babel/parser\";\nexport function parseAsEstreeExpression(source) {\n  return parseExpression(source, {\n    plugins: [\"estree\", [\"pipelineOperator\", {\n      proposal: \"minimal\"\n    }]],\n    attachComment: false\n  });\n}\nexport function parseAsEstree(source) {\n  var {\n    typescript\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var file = parse(source, {\n    plugins: [\"estree\", typescript && \"typescript\"].filter(Boolean),\n    strictMode: true,\n    attachComment: false\n  });\n  var body = file.program.body;\n  var jsNodes = typescript ? [] : body;\n  if (typescript) {\n    for (var node of body) {\n      if (node.type.startsWith(\"TS\")) {\n        if (/Enum|Import|Export/.test(node.type)) {\n          throw new SyntaxError(\"Unsupported TypeScript syntax: \".concat(node.type));\n        }\n      } else {\n        jsNodes.push(node);\n      }\n    }\n  }\n  if (jsNodes.length === 0) {\n    throw new SyntaxError(\"Function declaration not found\");\n  }\n  if (jsNodes.length > 1 || jsNodes[0].type !== \"FunctionDeclaration\") {\n    throw new SyntaxError(\"Expect a single function declaration at top level, but received: \".concat(jsNodes.map(node => \"\\\"\".concat(node.type, \"\\\"\")).join(\", \")));\n  }\n  return jsNodes[0];\n}\n//# sourceMappingURL=parse.js.map","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { parseAsEstreeExpression } from \"./parse.js\";\nimport { precook } from \"./precook.js\";\n// `raw` should always be asserted by `isEvaluable`.\nexport function preevaluate(raw, options) {\n  var fixes = [];\n  var source = raw.replace(/^\\s*<%[~=]?\\s|\\s%>\\s*$/g, m => {\n    fixes.push(m);\n    return \"\";\n  });\n  var expression = parseAsEstreeExpression(source);\n  var attemptToVisitGlobals = precook(expression, _objectSpread(_objectSpread({}, options), {}, {\n    expressionOnly: true\n  }));\n  return {\n    expression,\n    attemptToVisitGlobals,\n    source,\n    prefix: fixes[0],\n    suffix: fixes[1]\n  };\n}\nexport function isEvaluable(raw) {\n  return /^\\s*<%[~=]?\\s/.test(raw) && /\\s%>\\s*$/.test(raw);\n}\nexport function shouldAllowRecursiveEvaluations(raw) {\n  return /^\\s*<%~\\s/.test(raw);\n}\nexport function isTrackAll(raw) {\n  return /^\\s*<%=\\s/.test(raw) && /\\s%>\\s*$/.test(raw);\n}\n//# sourceMappingURL=preevaluate.js.map"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","Position","constructor","line","col","index","this","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCode","reflect","last","get","reduce","object","set","value","item","instantiate","properties","descriptors","map","filter","descriptor","enumerable","assign","split","instance","defineProperty","configurable","ModuleErrors","ImportMetaOutsideModule","message","code","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","type","prefix","String","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorsBeforeAfterExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","name","JSON","stringify","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","SloppyFunctionAnnexB","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","_excluded$1","_excluded2$1","toParseErrorConstructor","_ref","toMessage","loc","details","SyntaxError","clone","overrides","pos","ParseErrorEnum","argument","syntaxPlugin","Array","isArray","parseErrorTemplates","ParseErrorConstructors","reasonCode","template","_ref2","rest","Errors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","toUnenumerable","toESTreeLocation","node","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","ExportedTokenType","label","conf","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","options","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","push","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_TS_MODULE","BIND_FLAGS_TS_IMPORT","BIND_LEXICAL","BIND_KIND_VALUE","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","allowDirectSuper","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","raise","values","next","checkLocalExport","id","topLevelScope","FlowScope","args","super","declareFunctions","FlowScopeHandler","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","pluginConfig","plugins","pluginName","pluginOptions","actualOptions","getPluginOption","plugin","_this$plugins$get","setTrailingComments","comments","undefined","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","state","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","setLeadingComments","commentStart","input","charCodeAt","arguments","params","specifiers","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","State","strict","curLine","lineStart","startLoc","endLoc","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","lastTokEndLoc","lastTokStartLoc","lastTokStart","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","strictErrors","tokensLength","init","strictMode","sourceType","startLine","startColumn","curPosition","skipArrays","val","slice","_isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","octalStr","match","octal","parseInt","len","forceLen","n","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","e","Infinity","invalidDigit","prev","Number","isNaN","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","_excluded","_excluded2","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","tokens","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","nextTokenInLineStart","nextTokenInLineStartSince","lookaheadInLineCharCode","codePointAtPos","cp","trail","setStrict","forEach","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","annexB","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","next2","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","includes","pattern","isBigInt","replace","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","raiseProperties","error","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","current","oldClassScope","from","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","usePrivateName","classScope","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","UtilParser","addExtra","extra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","refExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","isLiteralPropertyName","isPrivateName","getPrivateNameSV","hasPropertyAsPrivateName","property","isObjectProperty","isObjectMethod","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","__clone","newNode","NodeUtils","startNode","startNodeAt","startNodeAtNode","finishNode","finishNodeAt","resetStartLocation","resetEndLocation","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","Error","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","unwrapParenthesizedExpression","expression","LValParser","toAssignable","isLHS","_node$extra","_node$extra3","parenthesized","_node$extra2","isLast","toAssignableObjectExpressionProp","trailingCommaLoc","toAssignableList","operator","left","arg","checkToRestConversion","exprList","elt","isAssignable","isBinding","every","element","toReferencedList","isParenthesizedExpr","toReferencedListDeep","expr","parseSpread","parseMaybeAssignAllowIn","parseRestBinding","parseBindingAtom","parseBindingList","parseObjectLike","parseIdentifier","close","closeCharCode","allowEmpty","elts","first","parseAssignableListItemTypes","checkCommaAfterRest","decorators","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseBindingProperty","parsePrivateName","parsePropertyName","method","parseObjPropValue","parseMaybeDefault","param","_left","right","isValidLVal","isUnparenthesizedInAssign","binding","ObjectProperty","hasOwnProperty","call","checkLVal","in","checkClashes","strictModeChanged","hasParenthesizedAncestor","_expression$extra","checkIdentifier","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","child","concat","declareNameFromIdentifier","identifier","allowPattern","assert","x","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TupleOptionalAfterType","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","tsIsVarianceAnnotations","isPossiblyLiteralEnum","computed","expressions","isUncomputedMemberExpressionChain","isValidAmbientConstInitializer","estree","isNumber","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","superClass","parse","file","parseRegExpLiteral","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","raw","expressionValue","stmt","rawValue","initFunction","checkDeclaration","getObjectOrClassMethodParams","isValidDirective","_stmt$expression$extr","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","body","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","finishCallExpression","unfinished","optional","_node$arguments$","callee","attributes","toReferencedArguments","parseExport","exportStartLoc","exported","_declaration$decorato","declaration","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","jsx","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","entity","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","parseExprAtom","jsxParseEmptyExpression","jsxParseSpreadChild","parseExpression","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","flow","flowPragma","shouldParseTypes","shouldParseEnums","matches","exec","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","returnType","typeAnnotation","BIND_FLAGS_FLOW_DECLARE_FN","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","bodyElement","isEsModuleType","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","flowParseInterfaceExtends","implements","mixins","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","SCOPE_FUNCTION","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","isIteratorStart","_expr$extra","parseArrayLike","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","shouldParseDefaultImport","checkImportReflection","module","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseFunctionParams","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","_jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","afterNext","typescript","tsParseInOutModifiers","tsParseModifiers","bind","allowedModifiers","disallowedModifiers","errorTemplate","tsParseConstModifier","tsParseInOutConstModifiers","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","modified","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","signature","returnTokenRequired","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","paramsKey","returnTypeKey","firstParameter","tsParseTypeMember","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","checkType","isLabeled","labeled","chAfterWord","wordName","typeOrLabel","tsParseNonArrayType","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","parseMaybeUnary","nodeType","keywordTypeFromName","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","startType","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","reScan_lt_gt","tsIsDeclarationStart","override","pp","parameter","isSimpleParameter","tsDisallowOptionalPattern","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","idx","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","_typeCast","_typeCast2","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","parseMaybeDecoratorArguments","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","maybeTakeDecorators","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","placeholders","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrSloppyAnnexBFunctionDeclaration","parseBlock","createNewLexicalScope","parseFunctionId","requireId","oldStrict","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowNewTargetOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","startIndex","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","lookaheadCh","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","parseFunction","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","canBeReservedWord","isKeyword","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","ret","revertScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasInLineFollowingBindingIdentifier","startsUsingForOf","parseModuleItem","parseStatementListItem","allowLabeledFunction","parseStatement","starttype","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithUsing","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","discriminant","cases","cur","sawDefault","isCase","block","handler","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","SCOPE_CLASS","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","nodes","clonePlaceholder","cloneStringLiteral","surrogate","isJSONModuleImport","_node$assertions","nonDefaultNamedSpecifier","parseMaybeImportReflection","isImportReflection","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importSpecifier","Parser","opts","getOptions","pluginMap","pluginsMap","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","allowCallParenthesized","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","exports","_options","ast","moduleError","_defineProperty","obj","writable","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","_toPropertyKey","hint","prim","Symbol","toPrimitive","TypeError","ExecutionContext","EnvironmentRecord","outer","OuterEnv","HasBinding","bindingMap","CreateMutableBinding","deletable","mutable","NormalCompletion","CreateImmutableBinding","InitializeBinding","initialized","SetMutableBinding","ReferenceError","GetBindingValue","DeclarativeEnvironment","FunctionEnvironment","SourceNode","for","ECMAScriptCode","Environment","IsConstructor","ReferenceRecord","Base","ReferenceName","Strict","CompletionRecord","Type","Value","Empty","collectBoundNames","root","names","collect","containsExpression","collectScopedDeclarations","nextOptions","IsPropertyReference","V","InitializeReferencedBinding","W","CopyDataProperties","excludedItems","getOwnPropertyNames","nextKey","ForDeclarationBindingInstantiation","forDeclaration","env","isConst","LoopContinues","completion","UpdateEmpty","GetValue","ToPropertyKey","GetV","P","PutValue","CreateListIteratorRecord","RequireObjectCoercible","GetIdentifierReference","ApplyStringOrNumericBinaryOperator","leftValue","rightValue","reservedObjects","WeakSet","Function","self","window","getGlobal","sanitize","allowedConstructors","URLSearchParams","WeakMap","cook","rootAst","codeSource","_hooks$beforeEvaluate3","rules","globalVariables","hooks","expressionOnly","rootEnv","rootContext","VariableEnvironment","LexicalEnvironment","executionContextStack","entries","TemplateMap","Evaluate","optionalChainRef","_hooks$beforeEvaluate","_hooks$beforeBranch","_hooks$beforeBranch2","beforeEvaluate","array","spreadValues","ThrowIfFunctionIsInvalid","OrdinaryFunctionCreate","getRunningContext","rightRef","funcName","thisValue","ref","func","skipped","EvaluateCall","ResolveBinding","_leftValue","baseValue","_result","propertyKey","EvaluatePropertyAccessWithExpressionKey","propertyNameString","EvaluatePropertyAccessWithIdentifierKey","constructExpr","argList","ArgumentListEvaluation","constructorName","Date","isAllowedConstructor","_constructorName","EvaluateNew","propName","EvaluateComputedPropertyName","_result2","chunks","_expr","tagRef","tagFunc","ApplyUnaryOperator","_lref","_rval","_rval2","DestructuringAssignmentEvaluation","lref","lval","rval","r","substr","ApplyStringOrNumericAssignment","oldEnv","blockEnv","BlockDeclarationInstantiation","blockValue","EvaluateStatementList","EvaluateBreakableStatement","stmtResult","DoWhileLoopEvaluation","lhsKind","uninitializedBoundNames","iterationKind","keyResult","runningContext","newEnv","exprRef","exprValue","_iterator","_key","EnumerateObjectProperties","ForInOfHeadEvaluation","iteratorRecord","destructuring","done","nextValue","lhsRef","iterationEnv","lhsName","BindingInitialization","status","return","innerResult","ForInOfBodyEvaluation","ForInOfLoopEvaluation","_node$init","ForBodyEvaluation","loopEnv","boundNames","dn","perIterationLets","bodyResult","ForLoopEvaluation","functionExpression","funcEnv","closure","InstantiateOrdinaryFunctionExpression","beforeBranch","v","oldValue","newValue","switchValue","_oldEnv","_blockEnv","R","defaultCaseIndex","findIndex","switchCase","hasDefaultCase","A","found","C","CaseClauseIsSelected","_R2","foundInB","B","_C","_R3","_C2","_R4","CaseBlockEvaluation","_R","_hooks$beforeEvaluate2","thrownValue","catchEnv","argName","CatchClauseEvaluation","F","_result3","declarator","_lhs2","_value","_rval3","WhileLoopEvaluation","increment","perIterationBindings","CreatePerIterationEnvironment","lastIterationEnv","thisIterationEnv","bn","lastValue","excludedNames","valueTarget","KeyedDestructuringAssignmentEvaluation","RestDestructuringAssignmentEvaluation","PropertyDestructuringAssignmentEvaluation","assignmentTarget","isObjectOrArray","_value2","_done","_nextValue","IteratorDestructuringAssignmentEvaluation","rhsValue","restProperty","IsConstantDeclaration","_fn","_fo","InstantiateFunctionObject","templateLiteral","memo","rawObj","freeze","GetTemplateObject","statements","s","sourceNode","_hooks$beforeCall","beforeCall","calleeContext","localEnv","PrepareForOrdinaryCall","formals","parameterNames","hasParameterExpressions","varDeclarations","varNames","functionNames","functionsToInitialize","_fn2","noVar","varEnv","paramName","IteratorBindingInitialization","_n","initialValue","lexEnv","lexDeclarations","_d","_fn3","_fo2","FunctionDeclarationInstantiation","EvaluateFunctionBody","OrdinaryCallEvaluateBody","CallFunction","environment","InitializeBoundName","RestBindingInitialization","KeyedBindingInitialization","PropertyBindingInitialization","restObj","_node","_value3","_A","_n2","_done2","_value4","bindingElement","_done3","_value5","_lhs3","_v","_done4","_value6","_v2","fo","AnalysisContext","AnalysisEnvironment","bindingSet","CreateBinding","precook","visitors","withParent","attemptToVisitGlobals","analysisContextStack","EvaluateChildren","parent","_hooks$beforeVisit","_hooks$beforeVisitUnk","beforeVisit","visit","_hooks$beforeVisitGlo","beforeVisitGlobal","_runningContext","BoundNamesInstantiation","lexicalBinding","_runningContext2","_oldEnv2","_lexicalBinding","_runningContext3","_oldEnv3","_env","_runningContext4","_oldEnv4","beforeVisitUnknown","console","warn","precookFunction","restOptions","Boolean","jsNodes","parseAsEstree","function","preevaluate","fixes","m","parseAsEstreeExpression","suffix","isEvaluable","shouldAllowRecursiveEvaluations","isTrackAll"],"sourceRoot":""}